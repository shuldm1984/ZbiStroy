
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

&НаСервере
Функция ЗаполнитьСписокВложений(АдресРассылки)
	
	СписокВложений = Новый Массив;
	
	СоответствиеВложенийПечатныхФорм = Новый Соответствие;
	НайденныеСтроки = ТаблицаПакетнаяРассылка.НайтиСтроки(Новый Структура("Пометка,АдресРассылки",Истина,АдресРассылки));
	Для Каждого НомСтр Из НайденныеСтроки Цикл
		МассивДопИнфо = Новый Массив;
		МассивДопИнфо.Добавить(НомСтр);
		СоответствиеВложенийПечатныхФорм.Вставить(НомСтр.ИмяПечатнойФормы,МассивДопИнфо);		
	КонецЦикла;
	
	УникальныйИдентификаторХранилища = Новый УникальныйИдентификатор;
	Для Каждого НомСтр Из СоответствиеВложенийПечатныхФорм Цикл
		
		ДокументСсылка		= НомСтр.Значение[0].ДокументПечати;
		ИмяПечати 			= НомСтр.Значение[0].ИмяПечатнойФормыСлужебное;
		ИмяПечатнойФормы	= НомСтр.Значение[0].ИмяПечатнойФормы;
		ПараметрыПечати		= Новый Структура("ОтображатьФаксимиле",НомСтр.Значение[0].Факсимиле);
		МассивПечатныхФорм 	= ЖБИ_ОбщегоНазначенияСервер.ПечатьСерверный(ИмяПечати, ДокументСсылка, ПараметрыПечати);	
		Если НЕ ЗначениеЗаполнено(МассивПечатныхФорм) Тогда 
			Возврат СписокВложений;
		КонецЕсли;
		
		// подготовка временной папки
		ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
		СоздатьКаталог(ИмяВременнойПапки);
		
		ТипФайла 		= ТипФайлаТабличногоДокумента.PDF;
		ИмяФайла 		= ИмяПечати + "." + "pdf"; 				
		ПолноеИмяФайла 	= ЖБИ_ОбщегоНазначенияСервер.УникальноеИмяФайла(ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ИмяФайла);
		МассивПечатныхФорм[0].Записать(ПолноеИмяФайла, ТипФайла);
		
		ДвоичныеДанные 			 = Новый ДвоичныеДанные(ПолноеИмяФайла);
		ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификаторХранилища);
		
		Номер 	= ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(ДокументСсылка,"Номер");
		Дата	= ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(ДокументСсылка,"Дата");
		
		ОписаниеФайла = Новый Структура;
		ОписаниеФайла.Вставить("Представление", ИмяПечатнойФормы + " " + Номер + " от " + Дата + ".pdf");
		ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
		СписокВложений.Добавить(ОписаниеФайла);
		
	КонецЦикла;
			
	Возврат СписокВложений
		
КонецФункции

&НаСервере
Процедура ЗаполнитьРезультатВыполненияСервер(АдресРезультата)
	
	Если ПустаяСтрока(АдресРезультата) Тогда 
		Возврат;
	КонецЕсли;
	
	ТаблРезультат = ПолучитьИзВременногоХранилища(АдресРезультата);	
	Для Каждого НомСтр Из ТаблРезультат Цикл 
		НайденынеСтроки = ТаблицаПакетнаяРассылка.НайтиСтроки(Новый Структура("ИмяПечатнойФормы",НомСтр.ИмяПечатнойФормы));
		Для Каждого Ном Из НайденынеСтроки Цикл 
			Ном.ПисьмоОтправлено = НомСтр.ПисьмоОтправлено;	
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПисьмо()	
	
	ТекДанные = Элементы.ТаблицаПакетнаяРассылка.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Отправитель			= УчЗаписьЭлПочты;
	АдресРассылки		= ТекДанные.АдресРассылки;
	ДопИнфо				= ТекДанные.ДопИнфо;
	
	СтруктураТема		= ЖБИ_ОбщегоНазначенияСервер.ЗаполнитьТекстПоУмолчанию();
	ТемаПоУмолчанию		= СтруктураТема.Тема;
	ТекстПоУмолчанию	= СтруктураТема.Текст;

	СписокВложений 		= ЗаполнитьСписокВложений(АдресРассылки);
		
	ИмяСвойств          = "Адрес,ВидПочтовогоАдреса,ИсточникКонтактнойИнформации,ОбъектИсточник,Пояснение,Представление";
	СтруктураПолучатели = Новый Структура(ИмяСвойств,АдресРассылки,"Электронная почта","","","Рассылка","");
	Получатели = Новый Массив();
	Получатели.Добавить(СтруктураПолучатели);
			
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Отправитель", Отправитель);
	ПараметрыПисьма.Вставить("Получатель", Получатели);
	ПараметрыПисьма.Вставить("Тема", ТемаПоУмолчанию);
	ПараметрыПисьма.Вставить("Текст", ТекстПоУмолчанию);
	ПараметрыПисьма.Вставить("Вложения", СписокВложений);
	ПараметрыПисьма.Вставить("УдалятьФайлыПослеОтправки", Истина);
	
	МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
	МодульРаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыПисьма);
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьДлитильнуюОперациюНаСервере(НаименованиеФоновогоЗадания)
	
	ТаблРассылки											= ДанныеФормыВЗначение(ТаблицаПакетнаяРассылка,Тип("ТаблицаЗначений"));
	АдресРезультата 										= ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	СтруктураПараметров 									= Новый Структура();
	СтруктураПараметров.Вставить("ТаблРассылки",ТаблРассылки);
	СтруктураПараметров.Вставить("УчЗаписьЭлПочты",УчЗаписьЭлПочты);
	СтруктураПараметров.Вставить("АдресРезультата",АдресРезультата);
	ПараметрыМетода = Новый Структура;
	ПараметрыМетода.Вставить("СтруктураПараметров", СтруктураПараметров);
	
	ПараметрыВыполненияВФоне 								= ДлительныеОперации.ПараметрыВыполненияВФоне(ЭтотОбъект.УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания 	= НаименованиеФоновогоЗадания;
	
	ИмяМетода = "ЖБИ_ОбщийМодульСервер.ОтправитьЭлектронноеПисьмоУведомления";
	ФоновоеЗадание 											= ДлительныеОперации.ВыполнитьВФоне(ИмяМетода,
		ПараметрыМетода, ПараметрыВыполненияВФоне);
		
		Возврат ФоновоеЗадание;
	
КонецФункции

&НаКлиенте
Процедура ОтправитьПакет()
	
	Задание 									 	 = ВыполнитьДлитильнуюОперациюНаСервере("Отправка пакета док-тов");
	НастройкиОжидания                                = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ТекстСообщения                 = "Отправка пакета док-тов";
	НастройкиОжидания.ВыводитьОкноОжидания           = Истина;
	НастройкиОжидания.ВыводитьПрогрессВыполнения     = Истина;
	Обработчик 										 = Новый ОписаниеОповещения("ВыполнитьПроцедуруФоновогоЗаданияВыполнено", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Задание, Обработчик, НастройкиОжидания);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРассылкиНаСервере()
	
	ТаблицаПакетнаяРассылка.Очистить();
	ТаблРассылки 			= ДанныеФормыВЗначение(ТаблицаПакетнаяРассылка,Тип("ТаблицаЗначений"));
	ИмяДокумента 			= ДокументРассылки.Метаданные().Имя;
	ТаблицаПечатныхФорм 	= Документы[ДокументРассылки.Метаданные().Имя].ЗаполнитьТаблицуПечатныхФорм(ДокументРассылки, ТаблРассылки);
	//ТаблицаПечатныхФорм.Свернуть("ИмяПечатнойФормы,ИмяПечатнойФормыСлужебное,АдресРассылки,ДопИнфо,Пометка,Факсимиле,ДокументПечати");
	Для Каждого НомСтр Из ТаблицаПечатныхФорм Цикл
		НоваяСтр = ТаблицаПакетнаяРассылка.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтр,НомСтр);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_ЭЛЕМЕНТОВ_УПРАВЛЕНИЯ_ФОРМЫ

#Область Команды

&НаКлиенте
Процедура ОтправитьПисьмоВручную(Команда)	
	ОтправитьПисьмо();	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПакетДокументов(Команда)	
	Текст = "Отправить пакет документов?";
	СтруктураСобытия = Новый Структура("ИмяСобытия","ОтправитьПакетДокументов");
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВопрос(ОписаниеОповещения,Текст,РежимДиалогаВопрос.ДаНет,15);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ДокументРассылкиПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(ДокументРассылки) Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуРассылкиНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(ЭтаФорма.Параметры) = Тип("ДанныеФормыСтруктура") Тогда
		Для Каждого Реквизит Из ЭтаФорма.ПолучитьРеквизиты() Цикл
			Если ЭтаФорма.Параметры.Свойство(Реквизит.Имя) Тогда
				ЭтаФорма[Реквизит.Имя] = ЭтаФорма.Параметры[Реквизит.Имя];
			КонецЕсли;	
		КонецЦикла;	
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументРассылки) Тогда
		ЗаполнитьТаблицуРассылкиНаСервере();	
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	УчЗаписьЭлПочты 	= ТекущийПользователь.ЖБИ_ЭлектроннаяПодписьПользователя.УчетнаяЗаписьЭлектроннойПочты;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроцедуруФоновогоЗаданияВыполнено(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
        Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Пакет документов успешно отправлен");
		ЗаполнитьРезультатВыполненияСервер(Результат.АдресРезультата);
		//ТаблицаПакетнаяРассылка.Очистить();
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВыполнения = Новый Структура("СообщениеОбОшибке","");	
	Если Результат = КодВозвратаДиалога.Отмена Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда 
		Если ДополнительныеПараметры.Свойство("ИмяСобытия") Тогда
			Если ДополнительныеПараметры.ИмяСобытия = "ОтправитьПакетДокументов" Тогда 
				Если Результат = КодВозвратаДиалога.Нет ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
					Возврат;
				КонецЕсли;
				ОтправитьПакет();						
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

#КонецОбласти