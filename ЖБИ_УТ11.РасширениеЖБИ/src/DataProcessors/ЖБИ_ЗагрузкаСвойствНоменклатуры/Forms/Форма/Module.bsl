
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

&НаКлиенте
Функция НайтиФайлыВИерархии(Путь, Маска)
	
	Результат = Новый Массив;
	Если ПустаяСтрока(Путь) Тогда 
		Возврат Результат;
	КонецЕсли;
	
	НайденныеКаталоги 	= НайтиФайлы(Путь, "*.*");
	МассивРезультатов 	= Новый Массив;
	Для каждого НайденныйФайл Из НайденныеКаталоги Цикл
		Если НайденныйФайл.ЭтоКаталог() Тогда
			МассивРезультатов.Добавить(НайтиФайлыВИерархии(НайденныйФайл.ПолноеИмя, Маска));
		КонецЕсли; 
	КонецЦикла;
	МассивРезультатов.Добавить(НайтиФайлы(Путь, Маска));
	Для Каждого ЭлементРезультат Из МассивРезультатов Цикл
		Для Каждого Файл Из ЭлементРезультат Цикл
			Результат.Добавить(Файл);
		КонецЦикла; 
	КонецЦикла;
	
	Номер = 0;
	Для Каждого НомСтр Из Результат Цикл
		НоваяСтр 			= ТаблицаФайлов.Добавить();
		НоваяСтр.Номер 		= Номер + 1;
		НоваяСтр.Выбор 		= Истина;
		НоваяСтр.ИмяФайла 	= НомСтр.ИмяБезРасширения;
		НоваяСтр.Путь 		= НомСтр.Путь;
		НоваяСтр.ПолныйПуть = НомСтр.ПолноеИмя;
		НоваяСтр.Размер		= НомСтр.Размер();
		НоваяСтр.Расширение = НомСтр.Расширение;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьПрисоединенныйФайл(НоменклатураСсылка)	
	Запрос 			= Новый Запрос;
	Запрос.УстановитьПараметр("ВладелецФайла", НоменклатураСсылка);
	Запрос.Текст 	= "ВЫБРАТЬ ПЕРВЫЕ 1
				        |    НоменклатураПрисоединенныеФайлы.Ссылка КАК Ссылка,
						|	 НоменклатураПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла
				        |ИЗ
				        |    Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
						|ГДЕ
						|	НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
						|	И НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления";
	РезультатЗапроса = Запрос.Выполнить().Выбрать().Количество()>0;	
	Возврат РезультатЗапроса;	
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьОбновитьКартинкиВКарточкуНоменклатурыСервер(ИмяФайла, РасширениеФайла, АдресВременногоХранилищаФайла, СообщениеОбОшибке)
	
	НоменклатураСсылка = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",СокрЛП(ИмяФайла));
	Если НоменклатураСсылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьПрисоединенныйФайл = ПроверитьПрисоединенныйФайл(НоменклатураСсылка);
	Если ЕстьПрисоединенныйФайл Тогда 
		Возврат;
	КонецЕсли;
	
	СозданныеИзображения 				= Новый Массив;
	ПараметрыФайла 						= РаботаСФайламиСлужебныйКлиентСервер.ПараметрыДобавленияФайла();
	ПараметрыФайла.ГруппаФайлов 		= Неопределено;
	ПараметрыФайла.ВладелецФайлов 		= НоменклатураСсылка;
	ПараметрыФайла.ИмяБезРасширения 	= ИмяФайла;
	ПараметрыФайла.РасширениеБезТочки 	= РасширениеФайла;
	ПараметрыФайла.ВремяИзмененияУниверсальное = Неопределено;
				
	СозданныеИзображения.Добавить(
			РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресВременногоХранилищаФайла));
			
	Если СозданныеИзображения.Количество() > 0 Тогда		
		НачатьТранзакцию();		
		Попытка				
			НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
			НоменклатураОбъект.ФайлКартинки = СозданныеИзображения[0];
			//НоменклатураОбъект.ОбменДанными.Загрузка = Истина;			
			НоменклатураОбъект.Записать();			
			ЗафиксироватьТранзакцию();
		Исключение
			СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			Возврат;
		КонецПопытки;			
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуКартинок(СообщениеОбОшибке)
	
	Для Каждого НомСтр Из ТаблицаФайлов Цикл
		Если НЕ НомСтр.Выбор Тогда 
			Продолжить;
		КонецЕсли;
		ФайлКартинки = Новый Файл(НомСтр.ПолныйПуть);
		Если НЕ ФайлКартинки.Существует() Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ПодробноеПредставлениеОшибки("Не найден файл: "+ НомСтр.ПолныйПуть));
		КонецЕсли;		
		//Файл 				= Новый ДвоичныеДанные(НомСтр.ПолныйПуть);
		
		ПомещаемыеФайлы 		= Новый Массив;
		Описание			 	= Новый ОписаниеПередаваемогоФайла(ФайлКартинки.ПолноеИмя, "");
		ПомещаемыеФайлы.Добавить(Описание);		
		ПомещенныеФайлы 		= Новый Массив;
		
		Если НЕ ПоместитьФайлы(ПомещаемыеФайлы,ПомещенныеФайлы,,Ложь,) Тогда
			СообщениеОбОшибке = "Ошибка при помещении файла в программу" + ПомещаемыеФайлы.ПолноеИмя;
			Продолжить;
		КонецЕсли;
		
		АдресВременногоХранилищаФайла = ПомещенныеФайлы[0].Хранение;

		ДобавитьОбновитьКартинкиВКарточкуНоменклатурыСервер(НомСтр.ИмяФайла, НомСтр.Расширение, АдресВременногоХранилищаФайла, СообщениеОбОшибке);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТаблицуТоваров(СтруктураОтборы)
	
	ТаблцаСвойств 		= ЖБИ_ОбменСайтом.ПолучитьТаблицуДоступныхСвойствБезОписания();
	
	Запрос 				= Новый Запрос;	
	Запрос.УстановитьПараметр("ГруппаТоваров",СтруктураОтборы.ГруппаТоваров);
	Запрос.УстановитьПараметр("Артикул","");
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Номенклатура,
	               |	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Свойство, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка)) КАК Свойство,
	               |	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Свойство.Имя, """") КАК ИмяСвойства,
	               |	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Значение, """") КАК Значение
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	               |		ПО Номенклатура.Ссылка = НоменклатураДополнительныеРеквизиты.Ссылка
	               |ГДЕ
	               |	НЕ Номенклатура.ПометкаУдаления
				   |	И Номенклатура.Артикул <> &Артикул
	               |	И Номенклатура.Родитель В ИЕРАРХИИ(&ГруппаТоваров)
	               |ИТОГИ ПО
	               |	Номенклатура";	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ВыборкаДетали = Выборка.Выбрать();
		НоваяСтр = ТаблцаСвойств.Добавить();
		Пока ВыборкаДетали.Следующий() Цикл
			Если ТаблцаСвойств.Колонки.Найти("Свойство" + ВыборкаДетали.ИмяСвойства) <> Неопределено Тогда
				НоваяСтр.Номенклатура 							 = ВыборкаДетали.Номенклатура;
				НоваяСтр["Свойство" + ВыборкаДетали.ИмяСвойства] = ВыборкаДетали.Свойство;
				НоваяСтр["Значение" + ВыборкаДетали.ИмяСвойства] = ВыборкаДетали.Значение;
			Иначе 
				НоваяСтр.Номенклатура 							 = ВыборкаДетали.Номенклатура;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблцаСвойств;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьНастройкиМакета(ТабличныйДок, СтруктураОтборы)
	
	ТабличныйДок.Очистить();
	
	ТаблТоваров			= ПолучитьТаблицуТоваров(СтруктураОтборы);	
	Макет 				= Обработки.ЖБИ_ЗагрузкаСвойствНоменклатуры.ПолучитьМакет("СвойстваНоменклатуры");	
	ОбластьШапка 		= Макет.ПолучитьОбласть("Шапка");
	ТабличныйДок.Вывести(ОбластьШапка);
	ОбластьТовар 		= Макет.ПолучитьОбласть("Товар");	
	Для Каждого НомСтр Из ТаблТоваров Цикл
		ОбластьТовар.Параметры.Артикул 				= НомСтр.Номенклатура.Артикул;
		ОбластьТовар.Параметры.Номенклатура 		= НомСтр.Номенклатура;
		ОбластьТовар.Параметры.АртикулДляСайта 		= НомСтр.Номенклатура.ЖБИ_АртикулДляСайта;
		ОбластьТовар.Параметры.ВыгружатьНаСайт 		= НомСтр.Номенклатура.ЖБИ_ВыгружатьНаСайт;
		ОбластьТовар.Параметры.ЕстьСертификатТаможенногоСоюза = НомСтр.Номенклатура.ЖБИ_ЕстьСертификатТаможенногоСоюза;
		ОбластьТовар.Параметры.ЕстьНаСкладе 		= НомСтр.Номенклатура.ЖБИ_ЕстьНаСкладе;
		ЗаполнитьЗначенияСвойств(ОбластьТовар.Параметры,НомСтр);
		ТабличныйДок.Вывести(ОбластьТовар);
	КонецЦикла;
	
	ТабличныйДок.ФиксацияСверху = 1;
	ТабличныйДок.ФиксацияСлева 	= 1;
	
	Возврат ТабличныйДок;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОбновитьДанныеСправочникаНоменклатуры(ТаблцаСвойств, СообщениеОбОшибке)
	
	//Свойства
	Свойства 			= "Тип,ТорговаяМарка,НормативныйДокумент,СпособИзготовления,Сырье,ПоверхностнаяПлотность,
							|ПлотностьНаРазрыв,РазрывнаяПрочность,ПлотностьНаРазрывПродПопереч,РазрывнаяНагрузкаПоДлине,РазрывнаяНагрузкаПоШирине,
							|РазмерЯчейки,ВысотаРебраМодуля,ШиринаРебраМодуля,ДлинаРебраМодуля,ПлощадьМодуляРазвернутомВиде,
							|ДиаметрВерхний,ДиаметрНижний,ДиаметрВходногоОтверcтия,ДиаметрВыходногоОтверстия,Отверстие,Сечение,ТолщинаМеталла,Гофр,Покрытие,
							|ТолщинаМембраны,ШиринаРулона,НамоткаРулона,ПлощадьРулона,ДлинаМП,ВесРулона,ВесМодуля,
							|Диаметр,Длина,ТолщинаСтенки,Вес,Объём,ВысотаМм,ШиринаМм";
	ДоступныеСвойства 	= Новый Структура(Свойства);
	Для Каждого НомСтр Из ТаблцаСвойств Цикл
		МассивСтруктур 	= Новый Массив;
		Для Каждого НомСвойства Из ДоступныеСвойства Цикл 
			Если ПустаяСтрока(НомСтр["Значение" + НомСвойства.Ключ]) Тогда 
				Продолжить;
			КонецЕсли;
			МассивСтруктур.Добавить(Новый Структура("Свойство, Значение",НомСтр["Свойство"+НомСвойства.Ключ],НомСтр["Значение" + НомСвойства.Ключ]));	
		КонецЦикла;
		Если МассивСтруктур.Количество()>0 Тогда 
			УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(НомСтр.Номенклатура,МассивСтруктур);
		КонецЕсли;
	КонецЦикла;
	
	//Реквизиты
	Для Каждого НомСтр Из ТаблцаСвойств Цикл
		Обновлять = Ложь;
		СпрОбъект = НомСтр.Номенклатура.ПолучитьОбъект();
		Для Каждого ТекСвойство Из НомСтр.СтруктураСвойствНоменклатуры Цикл
			Если ЗначениеЗаполнено(ТекСвойство.Значение) Тогда 
				СпрОбъект[ТекСвойство.Ключ] = ТекСвойство.Значение;
				Обновлять = Истина;
			КонецЕсли;
		КонецЦикла;
		Если Обновлять Тогда
			Попытка
				//СпрОбъект.ОбменДанными.Загрузка = Истина;
				СпрОбъект.Записать();
			Исключение
				СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				Возврат Ложь;
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
		
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьПолучитьЗначениеСвойства(Номенклатура,Свойство,ТекЗначение)
	
	//ЗначениеСвойстваНоменклатуры = УправлениеСвойствами.ЗначениеСвойства(Номенклатура,Свойство);
	ЗначениеСвойстваНоменклатуры  = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(СокрЛП(ТекЗначение),Истина,,Свойство);
	Если СокрЛП(ЗначениеСвойстваНоменклатуры.Наименование) <> СокрЛП(ТекЗначение) Тогда 		
		НовоеЗначение = Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
        НовоеЗначение.Владелец     = Свойство;
        НовоеЗначение.Наименование = СокрЛП(ТекЗначение);
        НовоеЗначение.Записать();
		ЗначениеСвойстваНоменклатуры = НовоеЗначение.Ссылка;
	КонецЕсли;
	
	Возврат ЗначениеСвойстваНоменклатуры;
	
КонецФункции

&НаСервереБезКонтекста
Процедура фСформироватьДанныеНаСервере(ТабличныйДок, СообщениеОбОшибке)
		
	УстановитьПривилегированныйРежим(Истина);				
	
	НомерСтрокиЗагрузки	= 2;
	ТаблцаСвойств 		= ЖБИ_ОбменСайтом.ПолучитьТаблицуДоступныхСвойствБезОписания();		
	Для НомерСтрокиОбласти = НомерСтрокиЗагрузки По ТабличныйДок.ВысотаТаблицы Цикл

		НоваяСтр 						= ТаблцаСвойств.Добавить();		 
		Номенклатура 					= ТабличныйДок.Область(НомерСтрокиОбласти,1).Расшифровка;
		Если ПустаяСтрока(Номенклатура) Тогда
			СообщениеОбОшибке = "Не удалось сопоставить Номенклатуру";
			Прервать;
		КонецЕсли;
		
		НоваяСтр.Номенклатура							= Номенклатура;
		СтруктураСвойств 								= Новый Структура("ЖБИ_АртикулДляСайта,ЖБИ_ВыгружатьНаСайт,ЖБИ_ЕстьСертификатТаможенногоСоюза,ЖБИ_ЕстьНаСкладе");		
		СтруктураСвойств.ЖБИ_АртикулДляСайта 			= ТабличныйДок.Область(НомерСтрокиОбласти,2).Текст;
		СтруктураСвойств.ЖБИ_ВыгружатьНаСайт 			= ?(ВРег(ТабличныйДок.Область(НомерСтрокиОбласти,3).Текст) = "ДА",Истина,Ложь);
		СтруктураСвойств.ЖБИ_ЕстьСертификатТаможенногоСоюза = ?(ВРег(ТабличныйДок.Область(НомерСтрокиОбласти,4).Текст) = "ДА",Истина,Ложь);
		СтруктураСвойств.ЖБИ_ЕстьНаСкладе 				= ?(ВРег(ТабличныйДок.Область(НомерСтрокиОбласти,5).Текст) = "ДА",Истина,Ложь);
		НоваяСтр.СтруктураСвойствНоменклатуры			= СтруктураСвойств;
		
		НоваяСтр.СвойствоТип 							= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Тип");
		НоваяСтр.ЗначениеТип 							= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоТип,ТабличныйДок.Область(НомерСтрокиОбласти,6).Текст);
		
		НоваяСтр.СвойствоТорговаяМарка 					= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ТорговаяМарка");
		НоваяСтр.ЗначениеТорговаяМарка 					= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоТорговаяМарка,ТабличныйДок.Область(НомерСтрокиОбласти,7).Текст);
		
		НоваяСтр.СвойствоНормативныйДокумент 			= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","НормативныйДокумент");
		НоваяСтр.ЗначениеНормативныйДокумент 			= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоНормативныйДокумент,ТабличныйДок.Область(НомерСтрокиОбласти,8).Текст);
		
		НоваяСтр.СвойствоСпособИзготовления 			= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","СпособИзготовления");
		НоваяСтр.ЗначениеСпособИзготовления 			= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоСпособИзготовления,ТабличныйДок.Область(НомерСтрокиОбласти,9).Текст);
		
		НоваяСтр.СвойствоСырье 							= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Сырье");
		НоваяСтр.ЗначениеСырье 							= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоСырье,ТабличныйДок.Область(НомерСтрокиОбласти,10).Текст);
		
		НоваяСтр.СвойствоПоверхностнаяПлотность 		= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ПоверхностнаяПлотность");
		НоваяСтр.ЗначениеПоверхностнаяПлотность 		= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоПоверхностнаяПлотность,ТабличныйДок.Область(НомерСтрокиОбласти,11).Текст);
		
		НоваяСтр.СвойствоПлотностьНаРазрыв 				= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","СпособИзготовления");
		НоваяСтр.ЗначениеПлотностьНаРазрыв 				= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоПлотностьНаРазрыв,ТабличныйДок.Область(НомерСтрокиОбласти,12).Текст);
		
		НоваяСтр.СвойствоРазрывнаяПрочность 			= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","РазрывнаяПрочность");
		НоваяСтр.ЗначениеРазрывнаяПрочность 			= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоРазрывнаяПрочность,ТабличныйДок.Область(НомерСтрокиОбласти,13).Текст);
		
		НоваяСтр.СвойствоПлотностьНаРазрывПродПопереч 	= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ПлотностьНаРазрывПродПопереч");
		НоваяСтр.ЗначениеПлотностьНаРазрывПродПопереч 	= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоПлотностьНаРазрывПродПопереч,ТабличныйДок.Область(НомерСтрокиОбласти,14).Текст);
		
		НоваяСтр.СвойствоРазрывнаяНагрузкаПоДлине 		= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","РазрывнаяНагрузкаПоДлине");
		НоваяСтр.ЗначениеРазрывнаяНагрузкаПоДлине 		= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоРазрывнаяНагрузкаПоДлине,ТабличныйДок.Область(НомерСтрокиОбласти,15).Текст);
		
		НоваяСтр.СвойствоРазрывнаяНагрузкаПоШирине 		= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","РазрывнаяНагрузкаПоШирине");
		НоваяСтр.ЗначениеРазрывнаяНагрузкаПоШирине 		= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоРазрывнаяНагрузкаПоШирине,ТабличныйДок.Область(НомерСтрокиОбласти,16).Текст);
		
		НоваяСтр.СвойствоРазмерЯчейки 					= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","РазмерЯчейки");
		НоваяСтр.ЗначениеРазмерЯчейки 					= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоРазмерЯчейки,ТабличныйДок.Область(НомерСтрокиОбласти,17).Текст);
		
		НоваяСтр.СвойствоВысотаРебраМодуля 				= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ВысотаРебраМодуля");
		НоваяСтр.ЗначениеВысотаРебраМодуля 				= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоВысотаРебраМодуля,ТабличныйДок.Область(НомерСтрокиОбласти,18).Текст);
		
		НоваяСтр.СвойствоШиринаРебраМодуля 				= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ШиринаРебраМодуля");
		НоваяСтр.ЗначениеШиринаРебраМодуля 				= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоШиринаРебраМодуля,ТабличныйДок.Область(НомерСтрокиОбласти,19).Текст);
		
		НоваяСтр.СвойствоДлинаРебраМодуля 				= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ДлинаРебраМодуля");
		НоваяСтр.ЗначениеДлинаРебраМодуля 				= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоДлинаРебраМодуля,ТабличныйДок.Область(НомерСтрокиОбласти,20).Текст);
		
		НоваяСтр.СвойствоПлощадьМодуляРазвернутомВиде 	= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ПлощадьМодуляРазвернутомВиде");
		НоваяСтр.ЗначениеПлощадьМодуляРазвернутомВиде 	= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоПлощадьМодуляРазвернутомВиде,ТабличныйДок.Область(НомерСтрокиОбласти,21).Текст);
		
		НоваяСтр.СвойствоДиаметр 						= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Диаметр");
		НоваяСтр.ЗначениеДиаметр 						= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоДиаметр,ТабличныйДок.Область(НомерСтрокиОбласти,22).Текст);
		
		НоваяСтр.СвойствоДиаметрВерхний 				= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ДиаметрВерхний");
		НоваяСтр.ЗначениеДиаметрВерхний 				= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоДиаметрВерхний,ТабличныйДок.Область(НомерСтрокиОбласти,23).Текст);
		
		НоваяСтр.СвойствоДиаметрНижний 					= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ДиаметрНижний");
		НоваяСтр.ЗначениеДиаметрНижний 					= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоДиаметрНижний,ТабличныйДок.Область(НомерСтрокиОбласти,24).Текст);
		
		НоваяСтр.СвойствоДиаметрВходногоОтверcтия 		= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ДиаметрВходногоОтверcтия");
		НоваяСтр.ЗначениеДиаметрВходногоОтверcтия 		= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоДиаметрВходногоОтверcтия,ТабличныйДок.Область(НомерСтрокиОбласти,25).Текст);
		
		НоваяСтр.СвойствоДиаметрВыходногоОтверстия 		= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ДиаметрВыходногоОтверстия");
		НоваяСтр.ЗначениеДиаметрВыходногоОтверстия 		= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоДиаметрВыходногоОтверстия,ТабличныйДок.Область(НомерСтрокиОбласти,26).Текст);
		
		НоваяСтр.СвойствоОтверстие 						= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Отверстие");
		НоваяСтр.ЗначениеОтверстие 						= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоОтверстие,ТабличныйДок.Область(НомерСтрокиОбласти,27).Текст);
		
		НоваяСтр.СвойствоСечение 						= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Сечение");
		НоваяСтр.ЗначениеСечение 						= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоСечение,ТабличныйДок.Область(НомерСтрокиОбласти,28).Текст);
		
		НоваяСтр.СвойствоТолщинаМеталла 				= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ТолщинаМеталла");
		НоваяСтр.ЗначениеТолщинаМеталла 				= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоТолщинаМеталла,ТабличныйДок.Область(НомерСтрокиОбласти,29).Текст);
		
		НоваяСтр.СвойствоГофр 							= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Гофр");
		НоваяСтр.ЗначениеГофр 							= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоГофр,ТабличныйДок.Область(НомерСтрокиОбласти,30).Текст);
		
		НоваяСтр.СвойствоПокрытие 						= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Покрытие");
		НоваяСтр.ЗначениеПокрытие 						= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоПокрытие,ТабличныйДок.Область(НомерСтрокиОбласти,31).Текст);
		
		НоваяСтр.СвойствоТолщинаМембраны 				= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ТолщинаМембраны");
		НоваяСтр.ЗначениеТолщинаМембраны 				= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоТолщинаМембраны,ТабличныйДок.Область(НомерСтрокиОбласти,32).Текст);
		
		НоваяСтр.СвойствоШиринаРулона 					= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ШиринаРулона");
		НоваяСтр.ЗначениеШиринаРулона 					= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоШиринаРулона,ТабличныйДок.Область(НомерСтрокиОбласти,33).Текст);
		
		НоваяСтр.СвойствоНамоткаРулона 					= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","НамоткаРулона");
		НоваяСтр.ЗначениеНамоткаРулона 					= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоНамоткаРулона,ТабличныйДок.Область(НомерСтрокиОбласти,34).Текст);
		
		НоваяСтр.СвойствоПлощадьРулона 					= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ПлощадьРулона");
		НоваяСтр.ЗначениеПлощадьРулона 					= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоПлощадьРулона,ТабличныйДок.Область(НомерСтрокиОбласти,35).Текст);
		
		НоваяСтр.СвойствоДлина 							= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Длина");
		НоваяСтр.ЗначениеДлина 							= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоДлина,ТабличныйДок.Область(НомерСтрокиОбласти,36).Текст);
		
		НоваяСтр.СвойствоДлинаМП 						= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ДлинаМП");
		НоваяСтр.ЗначениеДлинаМП 						= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоДлинаМП,ТабличныйДок.Область(НомерСтрокиОбласти,37).Текст);
		
		НоваяСтр.СвойствоТолщинаСтенки 					= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ТолщинаСтенки");
		НоваяСтр.ЗначениеТолщинаСтенки 					= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоТолщинаСтенки,ТабличныйДок.Область(НомерСтрокиОбласти,38).Текст);
		
		НоваяСтр.СвойствоШиринаМм 						= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ШиринаМм");
		НоваяСтр.ЗначениеШиринаМм 						= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоШиринаМм,ТабличныйДок.Область(НомерСтрокиОбласти,39).Текст);
		
		НоваяСтр.СвойствоВысотаМм 						= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ВысотаМм");
		НоваяСтр.ЗначениеВысотаМм 						= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоВысотаМм,ТабличныйДок.Область(НомерСтрокиОбласти,40).Текст);
		
		НоваяСтр.СвойствоВесРулона 						= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ВесРулона");
		НоваяСтр.ЗначениеВесРулона 						= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоВесРулона,ТабличныйДок.Область(НомерСтрокиОбласти,41).Текст);
		
		НоваяСтр.СвойствоВесМодуля 						= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","ВесМодуля");
		НоваяСтр.ЗначениеВесМодуля 						= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоВесМодуля,ТабличныйДок.Область(НомерСтрокиОбласти,42).Текст);
		
		НоваяСтр.СвойствоВес 							= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Вес");
		НоваяСтр.ЗначениеВес 							= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоВес,ТабличныйДок.Область(НомерСтрокиОбласти,43).Текст);
		
		НоваяСтр.СвойствоОбъём 							= ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоРеквизиту("Имя","Объём");
		НоваяСтр.ЗначениеОбъём 							= СоздатьПолучитьЗначениеСвойства(Номенклатура,НоваяСтр.СвойствоОбъём,ТабличныйДок.Область(НомерСтрокиОбласти,44).Текст);
		
	КонецЦикла;
	
	НачатьТранзакцию();
	РезультатОбновления = ОбновитьДанныеСправочникаНоменклатуры(ТаблцаСвойств,СообщениеОбОшибке);
	ЗафиксироватьТранзакцию();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_ЭЛЕМЕНТОВ_УПРАВЛЕНИЯ_ФОРМЫ

&НаКлиенте
Процедура КомандаЗагрузкаСвойствНоменклатуры(Команда)	
	Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница 		= Элементы.СтраницаЗагрузка;
	Элементы.КомандаЗагрузкаСвойствНоменклатуры.Пометка = Истина;
	Элементы.КомандаЗагрузкаКартинок.Пометка 			= Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗагрузкаКартинок(Команда)
	Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница 		= Элементы.ГруппаКартинки;
	Элементы.КомандаЗагрузкаКартинок.Пометка 			= Истина;
	Элементы.КомандаЗагрузкаСвойствНоменклатуры.Пометка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	
	СтруктураОтборы = Новый Структура("ГруппаТоваров", ГруппаТоваров);
	ЗаполнитьНастройкиМакета(ТабДокумент, СтруктураОтборы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)	
	СообщениеОбОшибке = "";
	Если Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница = Элементы.СтраницаЗагрузка Тогда 
		фСформироватьДанныеНаСервере(ТабДокумент, СообщениеОбОшибке);
	Иначе 
		ВыполнитьЗагрузкуКартинок(СообщениеОбОшибке);
	КонецЕсли;
	Если НЕ ПустаяСтрока(СообщениеОбОшибке) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке);
	Иначе 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Загрузка свойств выполнена");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаТоваровПриИзменении(Элемент)	
	КомандаЗаполнить("");	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТаблицаФайлов.Очистить();
	СтандартнаяОбработка = Ложь;
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Каталог = ВыборКаталог;
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = НСтр("ru = 'Все файлы(*.*)|*.*'");
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите каталог'");
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ВыборКаталог = ДиалогОткрытияФайла.Каталог;
		Маска			= "*.jpg";
		НайденныеФайлы 	= НайтиФайлыВИерархии(ВыборКаталог,Маска);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКаталогОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыборКаталог = "";
	ТаблицаФайлов.Очистить();
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.КомандаЗагрузкаСвойствНоменклатуры.Пометка = Истина;
КонецПроцедуры

#КонецОбласти