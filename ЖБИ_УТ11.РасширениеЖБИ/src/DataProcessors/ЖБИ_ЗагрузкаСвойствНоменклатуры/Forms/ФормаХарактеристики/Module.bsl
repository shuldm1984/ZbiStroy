
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

&НаКлиенте
Функция НайтиФайлыВИерархии(Путь, Маска)
	
	Результат = Новый Массив;
	Если ПустаяСтрока(Путь) Тогда 
		Возврат Результат;
	КонецЕсли;
	
	НайденныеКаталоги 	= НайтиФайлы(Путь, "*.*");
	МассивРезультатов 	= Новый Массив;
	Для каждого НайденныйФайл Из НайденныеКаталоги Цикл
		Если НайденныйФайл.ЭтоКаталог() Тогда
			МассивРезультатов.Добавить(НайтиФайлыВИерархии(НайденныйФайл.ПолноеИмя, Маска));
		КонецЕсли; 
	КонецЦикла;
	МассивРезультатов.Добавить(НайтиФайлы(Путь, Маска));
	Для Каждого ЭлементРезультат Из МассивРезультатов Цикл
		Для Каждого Файл Из ЭлементРезультат Цикл
			Результат.Добавить(Файл);
		КонецЦикла; 
	КонецЦикла;
	
	Номер = 0;
	Для Каждого НомСтр Из Результат Цикл
		НоваяСтр 			= ТаблицаФайлов.Добавить();
		НоваяСтр.Номер 		= Номер + 1;
		НоваяСтр.Выбор 		= Истина;
		НоваяСтр.ИмяФайла 	= НомСтр.ИмяБезРасширения;
		НоваяСтр.Путь 		= НомСтр.Путь;
		НоваяСтр.ПолныйПуть = НомСтр.ПолноеИмя;
		НоваяСтр.Размер		= НомСтр.Размер();
		НоваяСтр.Расширение = НомСтр.Расширение;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьПрисоединенныйФайл(НоменклатураСсылка)	
	Запрос 			= Новый Запрос;
	Запрос.УстановитьПараметр("ВладелецФайла", НоменклатураСсылка);
	Запрос.Текст 	= "ВЫБРАТЬ ПЕРВЫЕ 1
				        |    НоменклатураПрисоединенныеФайлы.Ссылка КАК Ссылка,
						|	 НоменклатураПрисоединенныеФайлы.ВладелецФайла КАК ВладелецФайла
				        |ИЗ
				        |    Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
						|ГДЕ
						|	НоменклатураПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла
						|	И НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления";
	РезультатЗапроса = Запрос.Выполнить().Выбрать().Количество()>0;	
	Возврат РезультатЗапроса;	
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьОбновитьКартинкиВКарточкуНоменклатурыСервер(ИмяФайла, РасширениеФайла, АдресВременногоХранилищаФайла, СообщениеОбОшибке)
	
	НоменклатураСсылка = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",СокрЛП(ИмяФайла));
	Если НоменклатураСсылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьПрисоединенныйФайл = ПроверитьПрисоединенныйФайл(НоменклатураСсылка);
	Если ЕстьПрисоединенныйФайл Тогда 
		Возврат;
	КонецЕсли;
	
	СозданныеИзображения 				= Новый Массив;
	ПараметрыФайла 						= РаботаСФайламиСлужебныйКлиентСервер.ПараметрыДобавленияФайла();
	ПараметрыФайла.ГруппаФайлов 		= Неопределено;
	ПараметрыФайла.ВладелецФайлов 		= НоменклатураСсылка;
	ПараметрыФайла.ИмяБезРасширения 	= ИмяФайла;
	ПараметрыФайла.РасширениеБезТочки 	= РасширениеФайла;
	ПараметрыФайла.ВремяИзмененияУниверсальное = Неопределено;
				
	СозданныеИзображения.Добавить(
			РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресВременногоХранилищаФайла));
			
	Если СозданныеИзображения.Количество() > 0 Тогда		
		НачатьТранзакцию();		
		Попытка				
			НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
			НоменклатураОбъект.ФайлКартинки = СозданныеИзображения[0];
			//НоменклатураОбъект.ОбменДанными.Загрузка = Истина;			
			НоменклатураОбъект.Записать();			
			ЗафиксироватьТранзакцию();
		Исключение
			СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			Возврат;
		КонецПопытки;			
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗагрузкуКартинок(СообщениеОбОшибке)
	
	Для Каждого НомСтр Из ТаблицаФайлов Цикл
		Если НЕ НомСтр.Выбор Тогда 
			Продолжить;
		КонецЕсли;
		ФайлКартинки = Новый Файл(НомСтр.ПолныйПуть);
		Если НЕ ФайлКартинки.Существует() Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(ПодробноеПредставлениеОшибки("Не найден файл: "+ НомСтр.ПолныйПуть));
		КонецЕсли;		
		//Файл 				= Новый ДвоичныеДанные(НомСтр.ПолныйПуть);
		
		ПомещаемыеФайлы 		= Новый Массив;
		Описание			 	= Новый ОписаниеПередаваемогоФайла(ФайлКартинки.ПолноеИмя, "");
		ПомещаемыеФайлы.Добавить(Описание);		
		ПомещенныеФайлы 		= Новый Массив;
		
		Если НЕ ПоместитьФайлы(ПомещаемыеФайлы,ПомещенныеФайлы,,Ложь,) Тогда
			СообщениеОбОшибке = "Ошибка при помещении файла в программу" + ПомещаемыеФайлы.ПолноеИмя;
			Продолжить;
		КонецЕсли;
		
		АдресВременногоХранилищаФайла = ПомещенныеФайлы[0].Хранение;

		ДобавитьОбновитьКартинкиВКарточкуНоменклатурыСервер(НомСтр.ИмяФайла, НомСтр.Расширение, АдресВременногоХранилищаФайла, СообщениеОбОшибке);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьТаблицуСвойств(НаборСвойств)
	
	Запрос 	= Новый Запрос;	
	Запрос.УстановитьПараметр("НаборОбщихСвойств", Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие);
	Запрос.УстановитьПараметр("НаборСвойств", НаборСвойств);
	Запрос.Текст = "ВЫБРАТЬ
					|	ДопРеквизитыСведения.Свойство КАК Свойство,
					|	ДопРеквизитыСведения.Свойство.Наименование КАК СвойствоНаименование
					|ИЗ
					|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДопРеквизитыСведения
					|ГДЕ
					|	ДопРеквизитыСведения.Ссылка = &НаборСвойств
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	ОбщиеДопРеквизитыСведения.Свойство,
					|	ОбщиеДопРеквизитыСведения.Свойство.Наименование
					|ИЗ
					|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ОбщиеДопРеквизитыСведения
					|ГДЕ
					|	ОбщиеДопРеквизитыСведения.Ссылка = &НаборОбщихСвойств";
	РезультатТаблицаСвойств = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатТаблицаСвойств;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьТаблицуСвойствДляНоменклатуры(ГруппаТоваров)
	
	НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
	Запрос 		 = Новый Запрос;		
	Запрос.УстановитьПараметр("ГруппаТоваров",ГруппаТоваров);
	Запрос.УстановитьПараметр("Артикул","");	
	Запрос.Текст =	"ВЫБРАТЬ ПЕРВЫЕ 1
	               	|	Номенклатура.Ссылка КАК Номенклатура
	               	|ИЗ
	               	|	Справочник.Номенклатура КАК Номенклатура
	               	|ГДЕ
	               	|	НЕ Номенклатура.ПометкаУдаления
				   	|	И Номенклатура.Артикул <> &Артикул
	               	|	И Номенклатура.Родитель В ИЕРАРХИИ(&ГруппаТоваров)
					|	И НЕ Номенклатура.ЭтоГруппа
	               	|ИТОГИ ПО
	               	|	Номенклатура";
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если РезультатЗапроса.Следующий() Тогда 
		НаборСвойств = РезультатЗапроса.Номенклатура.ВидНоменклатуры.НаборСвойств;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НаборОбщихСвойств", Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие);
	Запрос.УстановитьПараметр("НаборСвойств", НаборСвойств);
	Запрос.Текст = "ВЫБРАТЬ
					|	ДопРеквизитыСведения.Свойство КАК Свойство,
					|	ДопРеквизитыСведения.Свойство.Наименование КАК СвойствоНаименование
					|ИЗ
					|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДопРеквизитыСведения
					|ГДЕ
					|	ДопРеквизитыСведения.Ссылка = &НаборСвойств
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	ОбщиеДопРеквизитыСведения.Свойство,
					|	ОбщиеДопРеквизитыСведения.Свойство.Наименование
					|ИЗ
					|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ОбщиеДопРеквизитыСведения
					|ГДЕ
					|	ОбщиеДопРеквизитыСведения.Ссылка = &НаборОбщихСвойств";
	РезультатТаблицаСвойств = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатТаблицаСвойств;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДеревоСвойствПоИерархииНоменклатуры(СтруктураОтборы)
	
	ДеревоСвойств 			= ЖБИ_ОбменСайтом.ПолучитьТаблицуХарактеристикНоменклатуры();
	РезультатТаблицаСвойств = ВернутьТаблицуСвойствДляНоменклатуры(СтруктураОтборы.ГруппаТоваров);
	
	Запрос 					= Новый Запрос;	
	Запрос.УстановитьПараметр("ГруппаТоваров",СтруктураОтборы.ГруппаТоваров);
	Запрос.УстановитьПараметр("Артикул","");	
	Запрос.Текст =	"ВЫБРАТЬ
	               	|	Номенклатура.Ссылка КАК Номенклатура,
	               //|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Свойство, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка)) КАК Свойство,
				    |	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Свойство, """") КАК Свойство,
	               	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Свойство.Наименование, """") КАК СвойствоНаименование,
	               	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Значение, """") КАК Значение
	               	|ИЗ
	               	|	Справочник.Номенклатура КАК Номенклатура
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	               	|		ПО Номенклатура.Ссылка = НоменклатураДополнительныеРеквизиты.Ссылка
	               	|ГДЕ
	               	|	НЕ Номенклатура.ПометкаУдаления
				   	|	И Номенклатура.Артикул <> &Артикул
	               	|	И Номенклатура.Родитель В ИЕРАРХИИ(&ГруппаТоваров)
	               	|ИТОГИ ПО
	               	|	Номенклатура";					   
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ВыборкаДетали 						= Выборка.Выбрать();
		СтрокаВерхнегоУровня 				= ДеревоСвойств.Строки.Добавить();
		СтрокаВерхнегоУровня.Номенклатура 	= Выборка.Номенклатура;
		Для Каждого НомСтр Из РезультатТаблицаСвойств Цикл  
			НоваяСтр						= СтрокаВерхнегоУровня.Строки.Добавить();
			НоваяСтр.Свойство 				= НомСтр.Свойство;
			НоваяСтр.СвойствоНаименование 	= НомСтр.СвойствоНаименование;
			НоваяСтр.Значение				= "";	
		КонецЦикла;		
		Пока ВыборкаДетали.Следующий() Цикл
			НайденныеСтроки = СтрокаВерхнегоУровня.Строки.Найти(ВыборкаДетали.Свойство,"Свойство");
			Если НайденныеСтроки <> Неопределено Тогда
				НайденныеСтроки.Значение = ВыборкаДетали.Значение;
			КонецЕсли;
		КонецЦикла;	
		//Пока ВыборкаДетали.Следующий() Цикл
		//	Если НЕ ЗначениеЗаполнено(ВыборкаДетали.Свойство) Тогда 
		//		Продолжить;
		//	КонецЕсли;
		//	НоваяСтр						= СтрокаВерхнегоУровня.Строки.Добавить();
		//	НоваяСтр.Свойство 				= ВыборкаДетали.Свойство;
		//	НоваяСтр.СвойствоНаименование 	= ВыборкаДетали.СвойствоНаименование;
		//	НоваяСтр.Значение				= ВыборкаДетали.Значение;			
		//КонецЦикла;
		//Для Каждого НомСтр Из РезультатТаблицаСвойств Цикл 
		//	НайденныеСтроки = СтрокаВерхнегоУровня.Строки.Найти(НомСтр.Свойство,"Свойство");
		//	Если НайденныеСтроки = Неопределено Тогда 
		//		НоваяСтр						= СтрокаВерхнегоУровня.Строки.Добавить();
		//		НоваяСтр.Свойство 				= НомСтр.Свойство;
		//		НоваяСтр.СвойствоНаименование 	= НомСтр.СвойствоНаименование;
		//		НоваяСтр.Значение				= "";	
		//	КонецЕсли;
		//КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСвойств;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДеревоСвойствПоВидуНоменклатуре(СтруктураОтборы)
	
	ДеревоСвойств 			= ЖБИ_ОбменСайтом.ПолучитьТаблицуХарактеристикНоменклатуры();
	РезультатТаблицаСвойств = ВернутьТаблицуСвойств(СтруктураОтборы.ГруппаТоваров.НаборСвойств);
	Запрос 					= Новый Запрос;	
	Запрос.УстановитьПараметр("ГруппаТоваров",СтруктураОтборы.ГруппаТоваров);
	Запрос.УстановитьПараметр("Артикул","");	
	Запрос.Текст =	"ВЫБРАТЬ
	               	|	Номенклатура.Ссылка КАК Номенклатура,
	               //|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Свойство, ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка)) КАК Свойство,
				    |	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Свойство, """") КАК Свойство,
	               	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Свойство.Наименование, """") КАК СвойствоНаименование,
	               	|	ЕСТЬNULL(НоменклатураДополнительныеРеквизиты.Значение, """") КАК Значение
	               	|ИЗ
	               	|	Справочник.Номенклатура КАК Номенклатура
	               	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	               	|		ПО Номенклатура.Ссылка = НоменклатураДополнительныеРеквизиты.Ссылка
	               	|ГДЕ
	               	|	НЕ Номенклатура.ПометкаУдаления
				   	|	И Номенклатура.Артикул <> &Артикул
	               	|	И Номенклатура.ВидНоменклатуры = &ГруппаТоваров
	               	|ИТОГИ ПО
	               	|	Номенклатура";					   
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		ВыборкаДетали 						= Выборка.Выбрать();
		СтрокаВерхнегоУровня 				= ДеревоСвойств.Строки.Добавить();
		СтрокаВерхнегоУровня.Номенклатура 	= Выборка.Номенклатура;
		Для Каждого НомСтр Из РезультатТаблицаСвойств Цикл  
			НоваяСтр						= СтрокаВерхнегоУровня.Строки.Добавить();
			НоваяСтр.Свойство 				= НомСтр.Свойство;
			НоваяСтр.СвойствоНаименование 	= НомСтр.СвойствоНаименование;
			НоваяСтр.Значение				= "";	
		КонецЦикла;		
		Пока ВыборкаДетали.Следующий() Цикл
			НайденныеСтроки = СтрокаВерхнегоУровня.Строки.Найти(ВыборкаДетали.Свойство,"Свойство");
			Если НайденныеСтроки <> Неопределено Тогда
				НайденныеСтроки.Значение = ВыборкаДетали.Значение;
			КонецЕсли;
		КонецЦикла;
		//Пока ВыборкаДетали.Следующий() Цикл
		//	Если НЕ ЗначениеЗаполнено(ВыборкаДетали.Свойство) Тогда 
		//		Продолжить;
		//	КонецЕсли;
		//	НоваяСтр						= СтрокаВерхнегоУровня.Строки.Добавить();
		//	НоваяСтр.Свойство 				= ВыборкаДетали.Свойство;
		//	НоваяСтр.СвойствоНаименование 	= ВыборкаДетали.СвойствоНаименование;
		//	НоваяСтр.Значение				= ВыборкаДетали.Значение;			
		//КонецЦикла;		
		//Для Каждого НомСтр Из РезультатТаблицаСвойств Цикл 
		//	НайденныеСтроки = СтрокаВерхнегоУровня.Строки.Найти(НомСтр.Свойство,"Свойство");
		//	Если НайденныеСтроки = Неопределено Тогда 
		//		НоваяСтр						= СтрокаВерхнегоУровня.Строки.Добавить();
		//		НоваяСтр.Свойство 				= НомСтр.Свойство;
		//		НоваяСтр.СвойствоНаименование 	= НомСтр.СвойствоНаименование;
		//		НоваяСтр.Значение				= "";	
		//	КонецЕсли;
		//КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСвойств;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьНастройкиМакета(ТабличныйДок, СтруктураОтборы)
	
	ТабличныйДок.Очистить();
	Если Не ЗначениеЗаполнено(СтруктураОтборы.ГруппаТоваров) Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(СтруктураОтборы.ГруппаТоваров) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда 
		ДеревоСвойств	= ПолучитьДеревоСвойствПоВидуНоменклатуре(СтруктураОтборы);
	Иначе 
		ДеревоСвойств	= ПолучитьДеревоСвойствПоИерархииНоменклатуры(СтруктураОтборы);
	КонецЕсли;
		
	Макет 					= Обработки.ЖБИ_ЗагрузкаСвойствНоменклатуры.ПолучитьМакет("ВидыНоменклатуры");	
	ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка|ОбластьТовар");
	ТабличныйДок.Вывести(ОбластьШапка);
	
	ОбластьХарактеристики 	= Макет.ПолучитьОбласть("Шапка|ОбластьХарактеристик");
	Для Каждого НомСтрНоменклатура Из ДеревоСвойств.Строки Цикл 
		Для Каждого НомСтр Из НомСтрНоменклатура.Строки Цикл
			ОбластьХарактеристики.Параметры.Свойство 			= НомСтр.СвойствоНаименование;
			ОбластьХарактеристики.Параметры.РасшифровкаСвойство = НомСтр.Свойство; 
			ТабличныйДок.Присоединить(ОбластьХарактеристики);
		КонецЦикла;
		Прервать;
	КонецЦикла;
	
	НомерРасшифровки    = 6;
	ЕстьРасшифровка 	= Истина;
	Соответствие		= Новый Соответствие();
	Пока ЕстьРасшифровка Цикл
		Свойство = ТабличныйДок.Область(1,НомерРасшифровки).Расшифровка;
		Если ПустаяСтрока(Свойство) Тогда 
			Прервать;
		КонецЕсли;
		Соответствие.Вставить(Свойство,ТабличныйДок.Область(1,НомерРасшифровки).Имя);
		НомерРасшифровки = НомерРасшифровки + 1;
	КонецЦикла;
	
	Если Соответствие.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Рамка 			= Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	ЦветРамки		= Новый Цвет(153, 51, 0);
	НомПозиция 		= 2;
	ОбластьТовар = Макет.ПолучитьОбласть("Товар|ОбластьТовар");
	Для Каждого НомСтр Из ДеревоСвойств.Строки Цикл
		ОбластьТовар.Параметры.Артикул 				= НомСтр.Номенклатура.Артикул;
		ОбластьТовар.Параметры.Номенклатура 		= НомСтр.Номенклатура;
		ОбластьТовар.Параметры.АртикулДляСайта 		= НомСтр.Номенклатура.ЖБИ_АртикулДляСайта;
		ОбластьТовар.Параметры.ВыгружатьНаСайт 		= НомСтр.Номенклатура.ЖБИ_ВыгружатьНаСайт;
		ОбластьТовар.Параметры.ЕстьСертификатТаможенногоСоюза = НомСтр.Номенклатура.ЖБИ_ЕстьСертификатТаможенногоСоюза;
		ОбластьТовар.Параметры.ЕстьНаСкладе 		= НомСтр.Номенклатура.ЖБИ_ЕстьНаСкладе;
		ТабличныйДок.Вывести(ОбластьТовар);
		
		СтрокиСвойства = НомСтр.Строки;
		Для Каждого НомСвойства Из СтрокиСвойства Цикл 
			Область 								= Соответствие.Получить(НомСвойства.Свойство);
			Если Область = Неопределено Тогда 
				Продолжить;
			КонецЕсли;
			ОбластьСвойство							= ЛЕВ(Область,1) + Формат(НомПозиция,"ЧГ=") + Сред(Область,3,1) + Сред(Область,4,3);//Строка(Число(Сред(Область,4,3))-3);
			ИсходнаяОбласть 						= ТабличныйДок.Область(ОбластьСвойство);
			ИсходнаяОбласть.Текст 					= НомСвойства.Значение;
			ИсходнаяОбласть.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
			ИсходнаяОбласть.ВертикальноеПоложение 	= ВертикальноеПоложение.Центр;
			ИсходнаяОбласть.Обвести(Рамка,Рамка,Рамка,Рамка);
			ИсходнаяОбласть.ЦветРамки 				= ЦветРамки;
		КонецЦикла;	
		НомПозиция 	= НомПозиция + 1;
	КонецЦикла;

	ТабличныйДок.ФиксацияСверху = 1;
	ТабличныйДок.ФиксацияСлева 	= 1;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОбновитьДанныеСправочникаНоменклатуры(ДеревоСвойств, СтруктураОтборы, СообщениеОбОшибке)
	
	//Свойства
	Если ТипЗнч(СтруктураОтборы.ГруппаТоваров) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда 
		РезультатТаблицаСвойств = ВернутьТаблицуСвойств(СтруктураОтборы.ГруппаТоваров.НаборСвойств);
	Иначе 
		РезультатТаблицаСвойств = ВернутьТаблицуСвойствДляНоменклатуры(СтруктураОтборы.ГруппаТоваров);
	КонецЕсли;
	
	Для Каждого ВерхнийУровень Из ДеревоСвойств.Строки Цикл 
		Строки 			= ВерхнийУровень.Строки;
		МассивСтруктур 	= Новый Массив;
		Для Каждого НомСтр Из Строки Цикл 
			МассивСтруктур.Добавить(Новый Структура("Свойство, Значение",НомСтр.Свойство,НомСтр.Значение));		
		КонецЦикла;
		Если МассивСтруктур.Количество()>0 Тогда 
			УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(ВерхнийУровень.Номенклатура,МассивСтруктур);
		КонецЕсли;
	КонецЦикла;
	
	//Реквизиты
	Для Каждого ВерхнийУровень Из ДеревоСвойств.Строки Цикл
		Обновлять = Ложь;
		СпрОбъект = ВерхнийУровень.Номенклатура.ПолучитьОбъект();
		Для Каждого ТекСвойство Из ВерхнийУровень.СтруктураСвойствНоменклатуры Цикл
			Если ЗначениеЗаполнено(ТекСвойство.Значение) Тогда 
				СпрОбъект[ТекСвойство.Ключ] = ТекСвойство.Значение;
				Обновлять = Истина;
			КонецЕсли;
		КонецЦикла;
		Если Обновлять Тогда
			Попытка
				//СпрОбъект.ОбменДанными.Загрузка = Истина;
				СпрОбъект.Записать();
			Исключение
				СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				Возврат Ложь;
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
		
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьПолучитьЗначениеСвойства(Номенклатура,Свойство,ТекЗначение)
	
	//ЗначениеСвойстваНоменклатуры = УправлениеСвойствами.ЗначениеСвойства(Номенклатура,Свойство);
	ЗначениеСвойстваНоменклатуры  = Справочники.ЗначенияСвойствОбъектов.НайтиПоНаименованию(СокрЛП(ТекЗначение),Истина,,Свойство);
	Если СокрЛП(ЗначениеСвойстваНоменклатуры.Наименование) <> СокрЛП(ТекЗначение) Тогда 		
		НовоеЗначение = Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
        НовоеЗначение.Владелец     = Свойство;
        НовоеЗначение.Наименование = СокрЛП(ТекЗначение);
        НовоеЗначение.Записать();
		ЗначениеСвойстваНоменклатуры = НовоеЗначение.Ссылка;
	КонецЕсли;
	
	Возврат ЗначениеСвойстваНоменклатуры;
	
КонецФункции

&НаСервереБезКонтекста
Процедура фСформироватьДанныеНаСервере(ТабличныйДок, СтруктураОтборы, СообщениеОбОшибке)
		
	УстановитьПривилегированныйРежим(Истина);
	
	НомерРасшифровки    = 6;
	ЕстьРасшифровка 	= Истина;
	СоответствиеОбласти	= Новый Соответствие;
	Пока ЕстьРасшифровка Цикл
		Свойство = ТабличныйДок.Область(1,НомерРасшифровки).Расшифровка;
		Если ПустаяСтрока(Свойство) Тогда 
			Прервать;
		КонецЕсли;
		СоответствиеОбласти.Вставить(Свойство,ТабличныйДок.Область(1,НомерРасшифровки).Имя);
		НомерРасшифровки = НомерРасшифровки + 1;
	КонецЦикла;
	
	НомПозиция 			= 2;
	НомерСтрокиЗагрузки	= 2;
	ДеревоСвойств 		= ЖБИ_ОбменСайтом.ПолучитьТаблицуХарактеристикНоменклатуры();		
	Для НомерСтрокиОбласти = НомерСтрокиЗагрузки По ТабличныйДок.ВысотаТаблицы Цикл

		СтрокаВерхнегоУровня 			= ДеревоСвойств.Строки.Добавить();	 
		Номенклатура 					= ТабличныйДок.Область(НомерСтрокиОбласти,1).Расшифровка;
		Если ПустаяСтрока(Номенклатура) Тогда
			СообщениеОбОшибке = "Не удалось сопоставить Номенклатуру";
			Прервать;
		КонецЕсли;
		
		СтрокаВерхнегоУровня.Номенклатура					= Номенклатура;
		СтруктураСвойств 									= Новый Структура("ЖБИ_АртикулДляСайта,ЖБИ_ВыгружатьНаСайт,ЖБИ_ЕстьСертификатТаможенногоСоюза,ЖБИ_ЕстьНаСкладе");		
		СтруктураСвойств.ЖБИ_АртикулДляСайта 				= ТабличныйДок.Область(НомерСтрокиОбласти,2).Текст;
		СтруктураСвойств.ЖБИ_ВыгружатьНаСайт 				= ?(ВРег(ТабличныйДок.Область(НомерСтрокиОбласти,3).Текст) = "ДА",Истина,Ложь);
		СтруктураСвойств.ЖБИ_ЕстьСертификатТаможенногоСоюза = ?(ВРег(ТабличныйДок.Область(НомерСтрокиОбласти,4).Текст) = "ДА",Истина,Ложь);
		СтруктураСвойств.ЖБИ_ЕстьНаСкладе 					= ?(ВРег(ТабличныйДок.Область(НомерСтрокиОбласти,5).Текст) = "ДА",Истина,Ложь);
		СтрокаВерхнегоУровня.СтруктураСвойствНоменклатуры	= СтруктураСвойств;
		
		НомерРасшифровки    = 6;
		Для Каждого НомОбласти Из СоответствиеОбласти Цикл
			РасшифровкаСвойства = ТабличныйДок.Область(1,НомерРасшифровки).Расшифровка;
			Если Не ЗначениеЗаполнено(РасшифровкаСвойства) Тогда 
				Прервать;
			КонецЕсли;
			Область 							= СоответствиеОбласти.Получить(РасшифровкаСвойства);
			ОбластьСвойство						= ЛЕВ(Область,1) + Формат(НомПозиция,"ЧГ=") + Сред(Область,3,1) + Сред(Область,4,3);//Строка(Число(Сред(Область,4,3))-3);
			ИсходнаяОбласть 					= ТабличныйДок.Область(ОбластьСвойство);
			
			НоваяСтрока							= СтрокаВерхнегоУровня.Строки.Добавить();
			НоваяСтрока.Свойство 				= РасшифровкаСвойства;
			НоваяСтрока.СвойствоНаименование 	= РасшифровкаСвойства.Наименование;
			НоваяСтрока.Значение 				= СоздатьПолучитьЗначениеСвойства(Номенклатура,РасшифровкаСвойства,ИсходнаяОбласть.Текст);
			
			НомерРасшифровки 					= НомерРасшифровки + 1;
		КонецЦикла;	
		
		НомПозиция 	= НомПозиция + 1;
		
	КонецЦикла;
	
	НачатьТранзакцию();
	РезультатОбновления = ОбновитьДанныеСправочникаНоменклатуры(ДеревоСвойств, СтруктураОтборы, СообщениеОбОшибке);
	ЗафиксироватьТранзакцию();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_ЭЛЕМЕНТОВ_УПРАВЛЕНИЯ_ФОРМЫ

&НаКлиенте
Процедура КомандаЗагрузкаСвойствНоменклатуры(Команда)	
	Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница 		= Элементы.СтраницаЗагрузка;
	Элементы.КомандаЗагрузкаСвойствНоменклатуры.Пометка = Истина;
	Элементы.КомандаЗагрузкаКартинок.Пометка 			= Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗагрузкаКартинок(Команда)
	Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница 		= Элементы.ГруппаКартинки;
	Элементы.КомандаЗагрузкаКартинок.Пометка 			= Истина;
	Элементы.КомандаЗагрузкаСвойствНоменклатуры.Пометка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	
	СтруктураОтборы = Новый Структура("ГруппаТоваров", ГруппаТоваров);
	ЗаполнитьНастройкиМакета(ТабДокумент, СтруктураОтборы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)	
	СообщениеОбОшибке = "";
	Если Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница = Элементы.СтраницаЗагрузка Тогда
		СтруктураОтборы = Новый Структура("ГруппаТоваров", ГруппаТоваров);
		фСформироватьДанныеНаСервере(ТабДокумент, СтруктураОтборы, СообщениеОбОшибке);
	Иначе 
		ВыполнитьЗагрузкуКартинок(СообщениеОбОшибке);
	КонецЕсли;
	Если НЕ ПустаяСтрока(СообщениеОбОшибке) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке);
	Иначе 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Загрузка свойств выполнена");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГруппаТоваровПриИзменении(Элемент) 
	КомандаЗаполнить("");	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТаблицаФайлов.Очистить();
	СтандартнаяОбработка = Ложь;
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Каталог = ВыборКаталог;
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Фильтр = НСтр("ru = 'Все файлы(*.*)|*.*'");
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru = 'Выберите каталог'");
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ВыборКаталог = ДиалогОткрытияФайла.Каталог;
		Маска			= "*.jpg";
		НайденныеФайлы 	= НайтиФайлыВИерархии(ВыборКаталог,Маска);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКаталогОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыборКаталог = "";
	ТаблицаФайлов.Очистить();
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.КомандаЗагрузкаСвойствНоменклатуры.Пометка = Истина;
КонецПроцедуры

#КонецОбласти