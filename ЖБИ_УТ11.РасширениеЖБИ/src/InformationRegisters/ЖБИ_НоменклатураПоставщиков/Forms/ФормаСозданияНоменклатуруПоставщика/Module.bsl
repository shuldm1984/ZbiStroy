
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

&НаСервере
Функция ПолучитьПустуюСтруктуруНаборЗаписейСервер()
	
	СтруктураНабораЗаписей = РегистрыСведений.ЖБИ_НоменклатураПоставщиков.ПолучитьПустуюСтруктуруНаборЗаписей();
	
	Возврат СтруктураНабораЗаписей;
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьНоменклатуруПоставщика(Артикул, Наименование, Поставщик, Номенклатура, НоменклатураПоставщикаКопирование, ЦенаПоставщика, СообщениеОбОшибки)
	
	СпрНоменклатураПоставщикаСсылка = Справочники.НоменклатураПоставщиков.ПустаяСсылка();
	НачатьТранзакцию();
	
	//1 создать новую карточку номенклатуры поставщика
	СпрОбъект 				= Справочники.НоменклатураПоставщиков.СоздатьЭлемент();
	СпрОбъект.Владелец 		= Поставщик;
	СпрОбъект.Наименование 	= Наименование;
	СпрОбъект.Артикул 		= Артикул;
	СпрОбъект.Номенклатура  = Номенклатура;
	СпрОбъект.УстановитьНовыйКод();	
	Попытка
		СпрОбъект.Записать();
	Исключение
		Отказ = Истина;
		СообщениеОбОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат СпрНоменклатураПоставщикаСсылка;
	КонецПопытки;
	СпрНоменклатураПоставщикаСсылка = СпрОбъект.Ссылка;
	
	//2 создать новую цену поставщика
	ТаблицаНабораЗаписей = РегистрыСведений.ЖБИ_ПрайслистПоставщика.ПолучитьПустуюТаблицуНаборЗаписей();
	НоваяСтр = ТаблицаНабораЗаписей.Добавить();	
	НоваяСтр.Период					= ТекущаяДатаСеанса();
	НоваяСтр.Партнер 				= Поставщик;
	НоваяСтр.НоменклатураПоставщика = СпрНоменклатураПоставщикаСсылка;
	НоваяСтр.Цена					= ЦенаПоставщика;
	НоваяСтр.Автор 					= Пользователи.ТекущийПользователь();
	
	//получим пред. цену и дату
	РегистрыСведений.ЖБИ_ПрайслистПоставщика.ЗаполнитьПредыдущуюЦену(ТаблицаНабораЗаписей,Поставщик);
	
	Результат 						= РегистрыСведений.ЖБИ_ПрайслистПоставщика.СоздатьОбновитьЗаписиРегистраСведений(ТаблицаНабораЗаписей,,, СообщениеОбОшибки);
	Если Не Результат Тогда
		Возврат СпрНоменклатураПоставщикаСсылка;
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	Возврат СпрНоменклатураПоставщикаСсылка;
	
КонецФункции

&НаСервереБезКонтекста
Функция МожноСоздаватьНоменклатуруПоставщика(Артикул, Поставщик)
	
	МожноСоздаватьНоменклатуруПоставщика = Истина;
	//СпрНоменклатураПоставщикаСсылка = Справочники.НоменклатураПоставщиков.НайтиПоРеквизиту("Артикул",Артикул,,Поставщик);
	//Если СпрНоменклатураПоставщикаСсылка.Пустая() Тогда 
	//	МожноСоздаватьНоменклатуруПоставщика = Истина;
	//КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.УстановитьПараметр("ПараметрСтрокаПоиска", "%" + Артикул + "%");
	Запрос.Текст ="ВЫБРАТЬ ПЕРВЫЕ 1
	              |	НоменклатураПоставщиков.Ссылка КАК Ссылка
	              |ИЗ
	              |	Справочник.НоменклатураПоставщиков КАК НоменклатураПоставщиков
	              |ГДЕ
				  |	НоменклатураПоставщиков.Владелец = &Поставщик
	              |	И НоменклатураПоставщиков.Артикул ПОДОБНО &ПараметрСтрокаПоиска";	              	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();	
	Если РезультатЗапроса.Следующий() Тогда
		МожноСоздаватьНоменклатуруПоставщика = Ложь;	
	КонецЕсли;
	
	Возврат МожноСоздаватьНоменклатуруПоставщика;
	
КонецФункции

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_ЭЛЕМЕНТОВ_УПРАВЛЕНИЯ_ФОРМЫ

&НаКлиенте
Процедура КомандаСоздатьНоменклатуруПоставщика(Команда)
	
	Если НЕ ЭтаФорма.ПроверитьЗаполнение() Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнены обязательные поля");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.Партнер) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено поле Поставщик");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.Партнер) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнено  поле Пункт отгрузки");
		Возврат;
	КонецЕсли;
	
	МожноСоздаватьНоменклатуруПоставщика = МожноСоздаватьНоменклатуруПоставщика(Артикул, Запись.Партнер);
	Если НЕ МожноСоздаватьНоменклатуруПоставщика Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя создать оменклатуру поставщика, т.к. артикул не уникальный");
		Возврат;
	КонецЕсли;
	
	СообщениеОбОшибки = "";
	НоменклатураПоставщика = СоздатьНоменклатуруПоставщика(Артикул, Наименование, Запись.Партнер, НоменклатураСопоставления, Запись.НоменклатураПоставщика, ЦенаПоставщика, СообщениеОбОшибки);
	Если НЕ ПустаяСтрока(СообщениеОбОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибки);
		Возврат;
	КонецЕсли;
	
	Запись.НоменклатураПоставщика 	= НоменклатураПоставщика;
	Запись.ДатаОбновления			= ТекущаяДата();
	СтруктураНабораЗаписей 			= ПолучитьПустуюСтруктуруНаборЗаписейСервер();
	ЗаполнитьЗначенияСвойств(СтруктураНабораЗаписей,Запись);	
	
	СтруктураОповещения = Новый Структура("СтруктураНабораЗаписей", СтруктураНабораЗаписей);
	ОповеститьОВыборе(СтруктураОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьПунктОтгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("РегистрСведений.ЖБИ_ПунктыНазначенияОтгрузки.Форма.ФормаВыбора",
	Новый Структура("Партнер",Запись.Партнер),
	ЭтаФорма,,,,
	Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, "ФормаВыбораПунктОтгрузки"));
	
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Свойство("Партнер") Тогда 
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Запись, Параметры);
	Наименование 				= Параметры.НоменклатураПоставщика.Наименование;	
	Артикул						= Параметры.НоменклатураПоставщика.Артикул;
	НоменклатураСопоставления	= Параметры.НоменклатураПоставщика.Номенклатура;
	
	ЦенаПоставщика				= РегистрыСведений.ЖБИ_ПрайслистПоставщика.ПолучитьАктуальнуюЦенуПоставщика(Параметры.Партнер, Параметры.НоменклатураПоставщика);
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	Сообщение = Новый СообщениеПользователю;
	РезультатВыполнения = Новый Структура("СообщениеОбОшибке","");	
	Если Результат = КодВозвратаДиалога.Отмена Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда 
		Если ДополнительныеПараметры.Свойство("ИмяСобытия")
			И ЗначениеЗаполнено(ДополнительныеПараметры.ИмяСобытия) Тогда
		КонецЕсли;
	КонецЕсли;
	
	Если ДополнительныеПараметры = "ФормаВыбораПунктОтгрузки" Тогда
		Запись.ПунктОтгрузки = Результат;		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
