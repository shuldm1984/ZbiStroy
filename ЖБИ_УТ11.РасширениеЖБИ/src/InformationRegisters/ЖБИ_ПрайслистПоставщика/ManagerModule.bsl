#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

Функция ПолучитьПустуюТаблицуНаборЗаписей() Экспорт
	
	НаборЗаписей 			= РегистрыСведений.ЖБИ_ПрайслистПоставщика.СоздатьНаборЗаписей();	
	ТаблицаНабораЗаписей 	= НаборЗаписей.ВыгрузитьКолонки();
		
	Возврат ТаблицаНабораЗаписей;
	
КонецФункции

Функция СоздатьОбновитьЗаписиРегистраСведений(ТаблицаНабораЗаписей, СписокСвойствОбновления = Неопределено, СтруктураПоиска = Неопределено, СообщениеОбОшибке) Экспорт
	
	Для Каждого СтрокаНабораЗаписей Из ТаблицаНабораЗаписей Цикл	
		
		НаборЗаписей = РегистрыСведений.ЖБИ_ПрайслистПоставщика.СоздатьНаборЗаписей();
		
		Отбор = НаборЗаписей.Отбор;
		Период = ?(ЗначениеЗаполнено(СтрокаНабораЗаписей.Период), СтрокаНабораЗаписей.Период, ТекущаяДата()); 
		Отбор.Период.Установить(Период);
		Отбор.Партнер.Установить(СтрокаНабораЗаписей.Партнер);
		Отбор.НоменклатураПоставщика.Установить(СтрокаНабораЗаписей.НоменклатураПоставщика);
		Если СтруктураПоиска<>Неопределено Тогда
			Для Каждого Ном Из СтруктураПоиска Цикл 
				Отбор[Ном.Ключ].Установить(Ном.Значение);	
			КонецЦикла;
		КонецЕсли;		
		НаборЗаписей.Прочитать();	
		Если НаборЗаписей.Количество() > 0 Тогда
			Для Каждого Запись Из НаборЗаписей Цикл				
				Если СписокСвойствОбновления = Неопределено Тогда 
					ЗаполнитьЗначенияСвойств(Запись, СтрокаНабораЗаписей);
				Иначе
					ЗаполнитьЗначенияСвойств(Запись, СтрокаНабораЗаписей, СписокСвойствОбновления);
				КонецЕсли;		
			КонецЦикла;		
			Попытка
				НаборЗаписей.Записать(Истина);
			Исключение
				СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				Прервать;
			КонецПопытки;;
		Иначе 
			МенеджерЗаписи = РегистрыСведений.ЖБИ_ПрайслистПоставщика.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи,СтрокаНабораЗаписей);			
			Попытка
				МенеджерЗаписи.Записать(Истина);
			Исключение
				СообщениеОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				Прервать;
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;	
								
	Возврат ?(ПустаяСтрока(СообщениеОбОшибке),Истина,Ложь);
	
КонецФункции

Функция ПолучитьАктуальнуюЦенуПоставщика(Партнер,НоменклатураПоставщика) Экспорт
	
	ЦенаПоставщика 	= 0;
	ТаблицаЦен 		= РегистрыСведений.ЖБИ_ПрайслистПоставщика.СрезПоследних(,Новый Структура("Партнер,НоменклатураПоставщика",Партнер,НоменклатураПоставщика));
	Если ТаблицаЦен.Количество()>0 Тогда
		ЦенаПоставщика = ТаблицаЦен[0].Цена;	
	КонецЕсли;
	
	Возврат ЦенаПоставщика;
	
КонецФункции

Процедура ЗаполнитьПредыдущуюЦену(ТЗНоменклатуры,Поставщик) Экспорт	
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗНоменклатуры",ТЗНоменклатуры);
	Запрос.УстановитьПараметр("Поставщик",Поставщик);
	Запрос.Текст = "ВЫБРАТЬ
					|	ТЗНоменклатуры.НоменклатураПоставщика
					|ПОМЕСТИТЬ ВремТаблНоменклатура
					|ИЗ
					|	&ТЗНоменклатуры КАК ТЗНоменклатуры
					|;
					|
					|ВЫБРАТЬ
					|	ВремТаблНоменклатура.НоменклатураПоставщика,
					|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена,0) КАК ПредыдущаяЦена,
					|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Период,ДАТАВРЕМЯ(1,1,1)) КАК ПредыдущаяДата
					|ИЗ
					|	ВремТаблНоменклатура КАК ВремТаблНоменклатура
					|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖБИ_ПрайслистПоставщика.СрезПоследних() КАК ЦеныНоменклатурыСрезПоследних
					|		ПО ЦеныНоменклатурыСрезПоследних.Партнер = &Поставщик
					|		И  ВремТаблНоменклатура.НоменклатураПоставщика = ЦеныНоменклатурыСрезПоследних.НоменклатураПоставщика";
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл 
		НайденныеСтроки = ТЗНоменклатуры.НайтиСтроки(Новый Структура("НоменклатураПоставщика",РезультатЗапроса.НоменклатураПоставщика));	
		Если НайденныеСтроки.Количество()>0 Тогда
			Для Каждого НомСтр Из НайденныеСтроки Цикл
				НомСтр.ПредыдущаяДата = РезультатЗапроса.ПредыдущаяДата;
				НомСтр.ПредыдущаяЦена = РезультатЗапроса.ПредыдущаяЦена;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти