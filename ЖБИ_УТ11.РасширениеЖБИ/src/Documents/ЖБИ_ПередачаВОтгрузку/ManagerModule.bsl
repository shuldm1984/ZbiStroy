#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

Функция МожноПереводитьДокументНаОтгружен(ЗаявкаСсылка, ТекущийДокументРасчета) Экспорт 
	
	СтатусЗавершен = Истина;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование",ЗаявкаСсылка);
	Запрос.УстановитьПараметр("ТекущийДокументРасчета",ТекущийДокументРасчета);
	Запрос.Текст = "ВЫБРАТЬ
					|	ЖБИ_ПередачаВОтгрузку.Ссылка КАК Ссылка,
					|	ЖБИ_ПередачаВОтгрузку.Статус КАК Статус
					|ИЗ
					|	Документ.ЖБИ_ПередачаВОтгрузку КАК ЖБИ_ПередачаВОтгрузку
					|ГДЕ
					|	ЖБИ_ПередачаВОтгрузку.ДокументОснование = &ДокументОснование 
					|	И ЖБИ_ПередачаВОтгрузку.Ссылка <> &ТекущийДокументРасчета
					|	И НЕ ЖБИ_ПередачаВОтгрузку.ПометкаУдаления";
	 
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		Если РезультатЗапроса.Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.Расчет
			ИЛИ РезультатЗапроса.Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.ВРаботе Тогда 
			СтатусЗавершен = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтатусЗавершен;
	
КонецФункции

Функция МожноПереводитьДокументНаСтатусВыпискаДокументов(ЗаявкаСсылка, ТекущийДокументРасчета) Экспорт 
	
	СтатусОтклонен 	= Ложь;
	Запрос 			= Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование",ЗаявкаСсылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖБИ_ПередачаВОтгрузку.Ссылка КАК Ссылка,
	               |	ЖБИ_ПередачаВОтгрузку.Статус КАК Статус
	               |ИЗ
	               |	Документ.ЖБИ_ПередачаВОтгрузку КАК ЖБИ_ПередачаВОтгрузку
	               |ГДЕ
	               |	ЖБИ_ПередачаВОтгрузку.ДокументОснование = &ДокументОснование
	               |	И НЕ ЖБИ_ПередачаВОтгрузку.ПометкаУдаления";
	
	КолОтклоненых = 0;
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		Если РезультатЗапроса.Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.НеСогласован Тогда 
			КолОтклоненых = КолОтклоненых + 1;
		КонецЕсли;
	КонецЦикла;
	
	Если РезультатЗапроса.Количество() = КолОтклоненых Тогда 
		СтатусОтклонен = Истина;
	КонецЕсли;
	
	Возврат СтатусОтклонен;
	
КонецФункции

Функция ИзменитьСтатусЗаявкиНаВыпискуДокументов(СсылкаЗаявка,СсылкаПередачаВОтгрузку,СообщениеОбОшибки) Экспорт 
	
	Отказ 				= Ложь;
	СтатусОтклонен 		= МожноПереводитьДокументНаСтатусВыпискаДокументов(СсылкаЗаявка, СсылкаПередачаВОтгрузку);
	Если Не СтатусОтклонен Тогда
		Возврат Отказ;
	КонецЕсли;
	
	ОбъекЗаявка 		= СсылкаЗаявка.ПолучитьОбъект();
	ОбъекЗаявка.Статус 	= Перечисления.ЖБИ_СтатусЗаявкиПокупателя.ВыпискаДокументов;
	Попытка
		ОбъекЗаявка.Записать();
	Исключение
		СообщениеОбОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Отказ = Истина;
		Возврат Отказ;
	КонецПопытки;
	
	Возврат Отказ;
	
КонецФункции

Функция ИзменитьСтатусЗаявки(СсылкаЗаявка,СсылкаПередачаВОтгрузку,Согласование,СообщениеОбОшибки) Экспорт 
	
	Отказ = Ложь;
	ОбъекЗаявка = СсылкаЗаявка.ПолучитьОбъект();
	
	ОчиститьКонтактныхЛицПоставщика = Ложь;
	ОчиститьКонтактныхЛицПокупателя = Ложь;
	Если НЕ Согласование Тогда 
		ОбъекЗаявка.Статус 				= Перечисления.ЖБИ_СтатусЗаявкиПокупателя.ВыпискаДокументов;	
	Иначе 		
		СтатусЗавершен = МожноПереводитьДокументНаОтгружен(СсылкаЗаявка, СсылкаПередачаВОтгрузку);
		Если СтатусЗавершен 
			И СсылкаЗаявка.Статус = Перечисления.ЖБИ_СтатусЗаявкиПокупателя.ВыпискаДокументов Тогда 
			ОбъекЗаявка.Статус 				= Перечисления.ЖБИ_СтатусЗаявкиПокупателя.ВОтгрузке;
			ОчиститьКонтактныхЛицПоставщика = Истина;
			ОчиститьКонтактныхЛицПокупателя = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ОчиститьКонтактныхЛицПоставщика Тогда 
		Если ОбъекЗаявка.ВспомогательнаяИнформация.Количество()=0 Тогда 
		Иначе 		
			МассивПоставщики 		= СсылкаПередачаВОтгрузку.Товары.ВыгрузитьКолонку("Поставщик");
			Для Каждого НомСтр Из МассивПоставщики Цикл 
				Поставщик				= НомСтр;				
				ИндексПоследнего 		= ОбъекЗаявка.ВспомогательнаяИнформация.Количество() - 1;
				Для Индекс = 0 По ИндексПоследнего Цикл
					Если ОбъекЗаявка.ВспомогательнаяИнформация[ИндексПоследнего - Индекс].Поставщик = Поставщик Тогда 
						ОбъекЗаявка.ВспомогательнаяИнформация.Удалить(ИндексПоследнего - Индекс);		
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если ОчиститьКонтактныхЛицПокупателя Тогда 
		Если ОбъекЗаявка.ВспомогательнаяИнформация.Количество()=0 Тогда 
		Иначе 		
			Покупатель 				= ОбъекЗаявка.Партнер; 			
			ИндексПоследнего 		= ОбъекЗаявка.ВспомогательнаяИнформация.Количество() - 1;
			Для Индекс = 0 По ИндексПоследнего Цикл
				Если ОбъекЗаявка.ВспомогательнаяИнформация[ИндексПоследнего - Индекс].Поставщик = Покупатель Тогда 
					ОбъекЗаявка.ВспомогательнаяИнформация.Удалить(ИндексПоследнего - Индекс);		
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		ОбъекЗаявка.Записать();
	Исключение
		СообщениеОбОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Отказ = Истина;
		Возврат Отказ;
	КонецПопытки;
	
	Возврат Отказ;
	
КонецФункции

Функция СоздатьПередачаВОтгрузку(Ссылка, Отказ, СообщениеОбОшибки) Экспорт
	
	Отказ 					= Ложь;
	ДокПередачаВОтгрузку 	= Документы.ЖБИ_ПередачаВОтгрузку.ПустаяСсылка();
	Запрос 					= Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("НаДату",КонецДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("ЗаявкаПокупателя",Ссылка);
	Запрос.УстановитьПараметр("Статус",Перечисления.ЖБИ_СтатусРасчетаСтавки.НеСогласован);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЖБИ_ПередачаВОтгрузкуТовары.Поставщик КАК Поставщик,
	               |	ЖБИ_ПередачаВОтгрузкуТовары.Номенклатура КАК Номенклатура,
	               |	ЖБИ_ПередачаВОтгрузкуТовары.КодСтроки КАК КодСтроки,
	               |	СУММА(ЖБИ_ПередачаВОтгрузкуТовары.РазместитьВПлан) КАК УжеРазмещено
	               |ПОМЕСТИТЬ ТаблУжеРазмещено
	               |ИЗ
	               |	Документ.ЖБИ_ПередачаВОтгрузку.Товары КАК ЖБИ_ПередачаВОтгрузкуТовары
	               |ГДЕ
	               |	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.ДокументОснование = &ЗаявкаПокупателя
	               |	И ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.Статус <> &Статус
	               |	И НЕ ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.ПометкаУдаления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЖБИ_ПередачаВОтгрузкуТовары.Поставщик,
	               |	ЖБИ_ПередачаВОтгрузкуТовары.Номенклатура,
	               |	ЖБИ_ПередачаВОтгрузкуТовары.КодСтроки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СчетНаОплату.КодСтроки КАК КодСтроки,
	               |	СчетНаОплату.Поставщик КАК Поставщик,
	               |	СчетНаОплату.Номенклатура КАК Номенклатура,
	               |	СчетНаОплату.НоменклатураПоставщика КАК НоменклатураПоставщика,
	               |	СчетНаОплату.Количество - ЕСТЬNULL(ТаблУжеРазмещено.УжеРазмещено,0) КАК УжеРазмещено,
				   |	СчетНаОплату.Количество,
	               |	СчетНаОплату.Цена КАК Цена,
	               |	СчетНаОплату.ЦенаСоСкидкой КАК ЦенаСоСкидкой,
	               |	СчетНаОплату.Сумма КАК Сумма,
	               |	СчетНаОплату.НормаАвто КАК НормаАвто
	               |ИЗ
	               |	Документ.ЖБИ_ЗаявкиПокупателей.СчетНаОплату КАК СчетНаОплату
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблУжеРазмещено КАК ТаблУжеРазмещено
	               |		ПО СчетНаОплату.Поставщик = ТаблУжеРазмещено.Поставщик
	               |			И СчетНаОплату.Номенклатура = ТаблУжеРазмещено.Номенклатура
	               |			И СчетНаОплату.КодСтроки = ТаблУжеРазмещено.КодСтроки
	               |ГДЕ
	               |	СчетНаОплату.Ссылка = &ЗаявкаПокупателя
	               |	И СчетНаОплату.Пометка
	               |	И НЕ СчетНаОплату.Ссылка.ПометкаУдаления";	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Ном = 1;
	Пока РезультатЗапроса.Следующий() Цикл 
		Если Ном = 1 Тогда 
			ДокПередачаВОтгрузку 									= Документы.ЖБИ_ПередачаВОтгрузку.СоздатьДокумент();
			ЗаполнитьЗначенияСвойств(ДокПередачаВОтгрузку,Ссылка);
			ДокПередачаВОтгрузку.УстановитьНовыйНомер();
			ДокПередачаВОтгрузку.Дата 								= ТекущаяДатаСеанса();
			ДокПередачаВОтгрузку.ДокументОснование 					= Ссылка;
			ДокПередачаВОтгрузку.Статус 							= Перечисления.ЖБИ_СтатусРасчетаСтавки.Расчет;;
			ДокПередачаВОтгрузку.Менеджер      						= Ссылка.Менеджер;
			ДокПередачаВОтгрузку.Автор								= Пользователи.ТекущийПользователь();
		КонецЕсли;
		НоваяСтр = ДокПередачаВОтгрузку.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтр,РезультатЗапроса);
		НоваяСтр.Цена 				= ?(РезультатЗапроса.ЦенаСоСкидкой>0,РезультатЗапроса.ЦенаСоСкидкой,РезультатЗапроса.Цена);
		НоваяСтр.РазместитьВПлан 	= НоваяСтр.Количество - ?(РезультатЗапроса.УжеРазмещено = НоваяСтр.Количество, 0 ,РезультатЗапроса.УжеРазмещено);
		НоваяСтр.ЕдТранспорта 		= ?(НоваяСтр.НормаАвто = 0,0,НоваяСтр.РазместитьВПлан/НоваяСтр.НормаАвто);
		НоваяСтр.Сумма				= НоваяСтр.РазместитьВПлан * НоваяСтр.Цена;
		Ном = Ном + 1;
	КонецЦикла;
	
	Попытка 
		ДокПередачаВОтгрузку.Записать();
	Исключение
		СообщениеОбОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Отказ = Истина;
	КонецПопытки;
	
	Возврат ДокПередачаВОтгрузку.Ссылка;
	
КонецФункции


#КонецОбласти

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаПередачаВОтгрузку(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаДополнительныеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ПроведениеСерверУТ.ИнициализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	Запрос_ДополнительныеРасходы 			= Новый Запрос;    
	Для Каждого Параметр Из Запрос.Параметры Цикл 
		Запрос_ДополнительныеРасходы.Параметры.Вставить(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	Запрос_ДополнительныеРасходы.Текст 		= ТекстыЗапроса[1].Значение;
	РезультатЗапроса 						= Запрос_ДополнительныеРасходы.Выполнить().Выгрузить();
	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЖБИ_ДополнительныеРасходы.Очистить();
	ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЖБИ_ДополнительныеРасходы = РезультатЗапроса.Скопировать();	
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ЗаявкаПокупателя", ДокументСсылка.ДокументОснование);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.Дата                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                       КАК ВидДвижения,
	|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.Организация               КАК Организация,
	|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.Подразделение             КАК Подразделение,
	|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.ДокументОснование         КАК ЗаявкаПокупателя,
	|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка         					 КАК ПередачаВОтгрузку,
	|	ЖБИ_ПередачаВОтгрузкуТовары.Номенклатура           			 КАК Номенклатура,
	|	ЖБИ_ПередачаВОтгрузкуТовары.РазместитьВПлан                  КАК ПереданоВОтгрузку,
	|	ЖБИ_ПередачаВОтгрузкуТовары.КодСтроки                 	  	 КАК КодСтроки
	|ИЗ
	|	Документ.ЖБИ_ПередачаВОтгрузку.Товары КАК ЖБИ_ПередачаВОтгрузкуТовары
	|ГДЕ
	|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка = &Ссылка
	|	И ЖБИ_ПередачаВОтгрузкуТовары.РазместитьВПлан>0
	|";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	Запрос.УстановитьПараметр("Период",                       Реквизиты.Период);
	
КонецПроцедуры

Функция ТекстЗапросаПередачаВОтгрузку(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ЖБИ_ПередачаВОтгрузку";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Период КАК Период,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.Организация КАК Организация,
		|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.Подразделение КАК Подразделение,
		|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.ДокументОснование КАК ЗаявкаПокупателя,
		|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка КАК ПередачаВОтгрузку,		
		|	ЖБИ_ПередачаВОтгрузкуТовары.Поставщик КАК Поставщик,
		|	ЖБИ_ПередачаВОтгрузкуТовары.Номенклатура КАК Номенклатура,
		|	ЖБИ_ПередачаВОтгрузкуТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ЖБИ_ПередачаВОтгрузкуТовары.РазместитьВПлан КАК ПереданоВОтгрузку,
		|	ЖБИ_ПередачаВОтгрузкуТовары.КодСтроки КАК КодСтроки,
		|	ЖБИ_ЗаявкиПокупателейОкончательныйРасчет.УкрупненнаяСтавка КАК УкрупненнаяСтавка,
		|	ЖБИ_ЗаявкиПокупателейОкончательныйРасчет.НормаАвто КАК НормаАвто,
		|	ЖБИ_ЗаявкиПокупателейОкончательныйРасчет.Негабаритный КАК Негабаритный,
		|	ЖБИ_ЗаявкиПокупателейОкончательныйРасчет.ПунктОтгрузки КАК ПунктОтгрузки
		|ИЗ
		|	Документ.ЖБИ_ПередачаВОтгрузку.Товары КАК ЖБИ_ПередачаВОтгрузкуТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЖБИ_ЗаявкиПокупателей.ОкончательныйРасчет КАК ЖБИ_ЗаявкиПокупателейОкончательныйРасчет
		|		ПО ЖБИ_ПередачаВОтгрузкуТовары.Ссылка.ДокументОснование = ЖБИ_ЗаявкиПокупателейОкончательныйРасчет.Ссылка
		|			И ЖБИ_ПередачаВОтгрузкуТовары.Поставщик = ЖБИ_ЗаявкиПокупателейОкончательныйРасчет.Поставщик
		|			И ЖБИ_ПередачаВОтгрузкуТовары.Номенклатура = ЖБИ_ЗаявкиПокупателейОкончательныйРасчет.Номенклатура
		|			И ЖБИ_ПередачаВОтгрузкуТовары.КодСтроки = ЖБИ_ЗаявкиПокупателейОкончательныйРасчет.КодСтроки
		|ГДЕ
		|	ЖБИ_ПередачаВОтгрузкуТовары.Ссылка = &Ссылка
		|	И ЖБИ_ПередачаВОтгрузкуТовары.РазместитьВПлан > 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДополнительныеРасходы(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ЖБИ_ДополнительныеРасходы";
	
	Если НЕ ПроведениеСерверУТ.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
		"ВЫБРАТЬ
			|	ЖБИ_ЗаявкиПокупателей.Организация КАК Организация,
			|	ЖБИ_ЗаявкиПокупателей.Подразделение КАК Подразделение,
			|	ЖБИ_ЗаявкиПокупателей.Ссылка КАК ЗаявкаПокупателя 
			|ПОМЕСТИТЬ ТаблЗаявка
			|ИЗ
			|	Документ.ЖБИ_ЗаявкиПокупателей КАК ЖБИ_ЗаявкиПокупателей
			|ГДЕ
			|	ЖБИ_ЗаявкиПокупателей.Ссылка = &ЗаявкаПокупателя			
  			|
			|;
 			|
			|ВЫБРАТЬ
			|	ТаблЗаявка.Организация КАК Организация,
			|	ТаблЗаявка.Подразделение КАК Подразделение,
			|	ТаблЗаявка.ЗаявкаПокупателя КАК ЗаявкаПокупателя,
			|	ЖБИ_РасчетПлановыхСтавок.Партнер КАК Партнер,
			|	ЕСТЬNULL(ЖБИ_РасчетПлановыхСтавок.ДопЗатратыНаМатериалы,0) КАК ДопЗатратыНаМатериалы,
			|	0 КАК ДопРасходы,
			|	0 КАК ДопЗатратыНаХвост 
			|ПОМЕСТИТЬ ТаблИтоги
			|ИЗ
			|	ТаблЗаявка КАК ТаблЗаявка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЖБИ_РасчетПлановыхСтавок КАК ЖБИ_РасчетПлановыхСтавок
			|		ПО (ТаблЗаявка.ЗаявкаПокупателя = ЖБИ_РасчетПлановыхСтавок.ДокументОснование)
			|			И (ЖБИ_РасчетПлановыхСтавок.Статус = ЗНАЧЕНИЕ(Перечисление.ЖБИ_СтатусРасчетаСтавки.Рассчитан))
			|	
			|ОБЪЕДИНИТЬ 
			| 
			|  ВЫБРАТЬ
			|	ТаблЗаявка.Организация КАК Организация,
			|	ТаблЗаявка.Подразделение КАК Подразделение,
			|	ТаблЗаявка.ЗаявкаПокупателя КАК ЗаявкаПокупателя, 
			|	ЖБИ_ПодтверждениеПлановыхСтавок.Партнер КАК Партнер,
			|	0 КАК ДопЗатратыНаМатериалы,
			|	ЕСТЬNULL(ЖБИ_ПодтверждениеПлановыхСтавок.ДопРасходы,0) КАК ДопРасходы,
			|	ЕСТЬNULL(ЖБИ_ПодтверждениеПлановыхСтавок.ДопЗатратыНаХвост,0) КАК ДопЗатратыНаХвост
			|ИЗ
			|	ТаблЗаявка КАК ТаблЗаявка
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЖБИ_ПодтверждениеПлановыхСтавок КАК ЖБИ_ПодтверждениеПлановыхСтавок
			|		ПО (ТаблЗаявка.ЗаявкаПокупателя = ЖБИ_ПодтверждениеПлановыхСтавок.ДокументОснование)
			|			И (ЖБИ_ПодтверждениеПлановыхСтавок.Статус = ЗНАЧЕНИЕ(Перечисление.ЖБИ_СтатусРасчетаСтавки.Рассчитан))
			|;
 			|
			|ВЫБРАТЬ
			|	&Период КАК Период,
			|	ТаблИтоги.Организация КАК Организация,
			|	ТаблИтоги.Подразделение КАК Подразделение,
			|	ТаблИтоги.ЗаявкаПокупателя КАК ЗаявкаПокупателя,
			|	ТаблИтоги.Партнер КАК Партнер,
			|	СУММА(ТаблИтоги.ДопЗатратыНаМатериалы) КАК ДопЗатратыНаМатериалы,
			|	СУММА(ТаблИтоги.ДопРасходы) КАК ДопРасходы,
			|	СУММА(ТаблИтоги.ДопЗатратыНаХвост) КАК ДопЗатратыНаХвост
			|ИЗ
			|	ТаблИтоги КАК ТаблИтоги  
			|СГРУППИРОВАТЬ ПО
			|	ТаблИтоги.Организация,
			|	ТаблИтоги.Подразделение,
			|	ТаблИтоги.ЗаявкаПокупателя,
			|	ТаблИтоги.Партнер";	
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
