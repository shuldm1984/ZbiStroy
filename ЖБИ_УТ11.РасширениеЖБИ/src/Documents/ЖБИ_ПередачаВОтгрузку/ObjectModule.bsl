
Процедура РассчитатьСуммуВсего()
	
	СуммаДокумента = 0;
	Для Каждого НомСтр Из Товары Цикл 
		СуммаДокумента = СуммаДокумента + НомСтр.Сумма;	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка = Истина Тогда 
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи=РежимЗаписиДокумента.Запись И НЕ ПометкаУдаления Тогда	
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
	КонецЕсли;
	
	РассчитатьСуммуВсего();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЖБИ_ЗаявкиПокупателей") Тогда
		//ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		//ЭтотОбъект.УстановитьНовыйНомер();
		//ЭтотОбъект.Дата = ТекущаяДатаСеанса();
		//ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
		//Товары.Загрузить(ДанныеЗаполнения.СчетНаОплату.Выгрузить());
		//Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.Расчет;
	Иначе
		СтандартнаяОбработка = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ можно добавить только на основании Заявки покупателя");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.Рассчитан Тогда 
		ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
		Документы.ЖБИ_ПередачаВОтгрузку.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
		ОтразитьПередачаВОтгрузку(ДополнительныеСвойства, Движения, Отказ);
	КонецЕсли;
	
КонецПроцедуры

// Процедура формирования движений по регистру "ПередачаВОтгрузку".
//
// Параметры:
//  ДополнительныеСвойства - Структура - Структура дополнительных свойств для проведения.
//  Движения - Структура - Структура наборов движений документа.
//  Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьПередачаВОтгрузку(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаПередачаВОтгрузку = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЖБИ_ПередачаВОтгрузку;	
	Если Отказ ИЛИ ТаблицаПередачаВОтгрузку.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДвиженияЗаказыПоставщикам = Движения.ЖБИ_ПередачаВОтгрузку;
	ДвиженияЗаказыПоставщикам.Записывать = Истина;
	ДвиженияЗаказыПоставщикам.Загрузить(ТаблицаПередачаВОтгрузку);
	
	//
	ТаблицаДополнительныеРасходы = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЖБИ_ДополнительныеРасходы;	
	Если Отказ ИЛИ ТаблицаДополнительныеРасходы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//Удалим пустые строки
	ИндексПоследнего = ТаблицаДополнительныеРасходы.Количество() - 1;
	Для Индекс = 0 По ИндексПоследнего Цикл
		Если ТаблицаДополнительныеРасходы[ИндексПоследнего - Индекс].ДопЗатратыНаМатериалы = 0
			И ТаблицаДополнительныеРасходы[ИндексПоследнего - Индекс].ДопРасходы = 0 
			И ТаблицаДополнительныеРасходы[ИндексПоследнего - Индекс].ДопЗатратыНаХвост = 0 Тогда
			ТаблицаДополнительныеРасходы.Удалить(ИндексПоследнего - Индекс);	
		КонецЕсли;
	КонецЦикла;
	
	ДвиженияЗаказыПоставщикам = Движения.ЖБИ_ДополнительныеРасходы;
	ДвиженияЗаказыПоставщикам.Записывать = Истина;
	ДвиженияЗаказыПоставщикам.Загрузить(ТаблицаДополнительныеРасходы);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.НеСогласован;
КонецПроцедуры
