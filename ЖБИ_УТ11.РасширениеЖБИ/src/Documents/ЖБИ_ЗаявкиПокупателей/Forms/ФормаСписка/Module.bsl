

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ 

&НаСервереБезКонтекста
Функция ИзменитьКомментарийСервер(Комментарий, СтруктураПараметров, СообщениеОбОшибки)
	
	РезультатВыполнения 				=  Истина;
	ЗаявкаПокупателяОбъект 				=  СтруктураПараметров.ЗаявкаПокупателя.ПолучитьОбъект();
	ЗаявкаПокупателяОбъект.Комментарий  =  Комментарий;	
	Попытка
		ЗаявкаПокупателяОбъект.Записать();
	Исключение
		РезультатВыполнения = Ложь;
		СообщениеОбОшибки 	= ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	КонецПопытки;
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьКомментарий()	
	
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"Список");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураСобытия = Новый Структура("ИмяСобытия,ЗаявкаПокупателя,Комментарий","ИзменитьКомментарий",ТекДанные.Ссылка,ТекДанные.Комментарий);
	ВыбЗнач = ТекДанные.Комментарий;
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	КЧ = Новый КвалификаторыСтроки(512);
	ОписаниеТипов = Новый ОписаниеТипов(Массив, КЧ);
	Оповещение = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВводЗначения(Оповещение,ВыбЗнач, "Введите Комментарий", ОписаниеТипов)	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяОперации()
	
	ИмяОперации = "";
	ИмяСтраницы = Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница.Имя;	
	Если ИмяСтраницы = "СтраницаЗаявок" Тогда
		ИмяОперации = "СтраницаЗаявок";
		Элементы.КомандаЗаявкиПокупателей.Пометка = Истина;
	КонецЕсли;
	
	Возврат ИмяОперации;
	
КонецФункции

&НаКлиенте
Процедура УстановитьОтборПоУмолчаниюДинамическогоСписка()
	
	ОтборМенеджер = ТекущийПользователь;
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элементы.ОтборМенеджер, "Менеджер",Неопределено);	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент,ИмяОтбора,ВидСравнения)
	
	Если ЗначениеЗаполнено(ЭтотОбъект[Элемент.Имя]) Тогда
		Если Элемент.Имя = "ОтборЭтотГод" Тогда
			Если ЭтотОбъект[Элемент.Имя] Тогда 
				ДатаОтбора = НачалоДня(ДобавитьМесяц(ТекущаяДата(),-12));
				ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список, "Дата", ДатаОтбора, ВидСравнения, , );
			Иначе 
				ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,"Дата");
			КонецЕсли;
		ИначеЕсли Элемент.Имя = "ОтборПоПродукции" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
			ИмяОтбора,
			Истина);
			
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
			"Номенклатура",
			ОтборПоПродукции);
			
		Иначе 
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, ИмяОтбора, ЭтотОбъект[Элемент.Имя], ВидСравнения, , );
		КонецЕсли;	
	Иначе
		Если Элемент.Имя = "ОтборПоПродукции" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
			ИмяОтбора,
			Ложь);
			
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
			"Номенклатура",
			ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
			
		Иначе 
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,ИмяОтбора);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_ЭЛЕМЕНТОВ_УПРАВЛЕНИЯ_ФОРМЫ

#Область Команды

&НаКлиенте
Процедура КомандаСоздать(Команда)
	
	СтруктураОтборов = Новый Структура();
	ОткрытьФорму("Документ.ЖБИ_ЗаявкиПокупателей.Форма.ФормаДокумента",
	СтруктураОтборов,
	ЭтаФорма,,,,
	Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, "ФормаСозданияДокумента"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИзменить(Команда)
	
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"Список");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	
	ОткрытьФорму("Документ.ЖБИ_ЗаявкиПокупателей.Форма.ФормаДокумента",
	Новый Структура("Ключ",ТекДанные.Ссылка),
	ЭтаФорма,,,,
	Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, "ФормаРедактированиеДокумента"));
	
КонецПроцедуры

#КонецОбласти

#Область Отборы

&НаКлиенте
Процедура ОтборПоПродукцииПриИзменении(Элемент)	
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "ОтборНоменклатура",Неопределено);	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент)	
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "Статус",Неопределено);	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМенеджерПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "Менеджер",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборАвторПриИзменении(Элемент)	
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "Автор",Неопределено);		
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)	
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "Организация",Неопределено);	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСтатусСчетаПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "СтатусСчета",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборЭтотГодПриИзменении(Элемент)
	
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "ОтборЭтотГод",Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПокупательПриИзменении(Элемент)	
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "Покупатель",Неопределено);		
КонецПроцедуры

#КонецОбласти

#Область Список

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)	
	Если Элемент.ТекущийЭлемент.Имя = "Комментарий" Тогда
		ИзменитьКомментарий();
	Иначе 
		КомандаИзменить("");		
	КонецЕсли;				
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)	
	Если Копирование Тогда 
		Отказ = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПометитьЗаявкуНаУдаление(Ссылка)
	
	ЗаявкаСсылка = Ссылка;
	ЗаявкаОбъект = ЗаявкаСсылка.ПолучитьОбъект();
	Если ЗаявкаОбъект.Статус = Перечисления.ЖБИ_СтатусЗаявкиПокупателя.Новый Тогда 		
		ЗаявкаОбъект.УстановитьПометкуУдаления(Истина);
		ЗаявкаОбъект.Статус = Перечисления.ЖБИ_СтатусЗаявкиПокупателя.Удален;
	Иначе 
		ЗаявкаОбъект.ОкончательныйРасчет.Очистить();
		ЗаявкаОбъект.КонтрольТранспорта.Очистить();
		ЗаявкаОбъект.Документы.Очистить();
		ЗаявкаОбъект.Статус = Перечисления.ЖБИ_СтатусЗаявкиПокупателя.Новый;
	КонецЕсли;

	ЗаявкаОбъект.Записать();
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаНеИспользуется(Команда)
	
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"Список");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекДанные.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусЗаявкиПокупателя.Новый")
		ИЛИ ТекДанные.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусЗаявкиПокупателя.ОкончательныйРасчет")
		ИЛИ ТекДанные.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусЗаявкиПокупателя.ОтправленНаРасчетПлановыхСтавок")
		ИЛИ ТекДанные.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусЗаявкиПокупателя.ПодготовкаСчета") Тогда
	Иначе 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Нельзя удалять документ в статусе: "+ТекДанные.Статус);
		Возврат;
	КонецЕсли;
	
	Если ЖБИ_ОбщийМодульДокументыСервер.ОпределитьДоступностьРоли("ЖБИ_НачальникОтделаСбыта")
		ИЛИ ЖБИ_ОбщийМодульДокументыСервер.ОпределитьДоступностьРоли("ЖБИ_ОсновнаяРоль") Тогда
	Иначе 		
		Если ТекДанные.Менеджер <> ТекущийПользователь Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю("Нельзя удалять документы, которые принадлежат другим менеджерам");
			Возврат;	
		КонецЕсли;
	КонецЕсли; 
	
	КолЗаявок = Элементы.Список.ВыделенныеСтроки.Количество(); 
	
	Текст = ?(КолЗаявок = 1, "Удалить заявку: " + ТекДанные.Ссылка + "?", "Удалить выделенные заявки: " + КолЗаявок+"?");
	СтруктураПраметров = Новый Структура("Ссылка, КолЗаявок",ТекДанные.Ссылка, КолЗаявок);
	СтруктураСобытия = Новый Структура("ИмяСобытия, ДопПараметры","КомандаНеИспользуется",СтруктураПраметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВопрос(ОписаниеОповещения,Текст,РежимДиалогаВопрос.ДаНет,15);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаКлиенте
Процедура УстановитьДоступностьЭлементовФормы()
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(ЭтаФорма.Параметры) = Тип("ДанныеФормыСтруктура") Тогда
		Для Каждого Реквизит Из ЭтаФорма.ПолучитьРеквизиты() Цикл
			Если ЭтаФорма.Параметры.Свойство(Реквизит.Имя) Тогда
				ЭтаФорма[Реквизит.Имя] = ЭтаФорма.Параметры[Реквизит.Имя];
			КонецЕсли;	
		КонецЦикла;	
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	УстановитьДоступностьЭлементовФормы();
	Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница = Элементы.СтраницаЗаявок;
	ИмяОперации = ПолучитьИмяОперации();
	
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элементы.ОтборПоПродукции, "ОтборНоменклатура",Неопределено);
	УстановитьОтборПоУмолчаниюДинамическогоСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВыполнения = Новый Структура("СообщениеОбОшибке","");	
	Если Результат = КодВозвратаДиалога.Отмена Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда 
		Если ДополнительныеПараметры.Свойство("ИмяСобытия")
			И ЗначениеЗаполнено(ДополнительныеПараметры.ИмяСобытия) Тогда
			Если ДополнительныеПараметры.ИмяСобытия = "КомандаНеИспользуется" Тогда			
				Если Результат = КодВозвратаДиалога.Нет ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
					Возврат;
				КонецЕсли;
				КолЗаявок 		= ДополнительныеПараметры.ДопПараметры.КолЗаявок; 
				ДопПараметры    = ДополнительныеПараметры.ДопПараметры; 
				Если КолЗаявок  = 1 Тогда 
					ПометитьЗаявкуНаУдаление(ДопПараметры.Ссылка); 
				Иначе
					Для Каждого НомСтр Из Элементы.Список.ВыделенныеСтроки Цикл
						ДанныеСтроки 	= Элементы.Список.ДанныеСтроки(НомСтр);
						ПометитьЗаявкуНаУдаление(ДанныеСтроки.Ссылка);
					КонецЦикла; 
				КонецЕсли;
				Элементы.Список.Обновить()
			ИначеЕсли  ДополнительныеПараметры.ИмяСобытия = "ИзменитьКомментарий" Тогда 
				Если Результат = Неопределено 
					ИЛИ ПустаяСтрока(Результат) Тогда 
					Возврат;
				КонецЕсли;
				СообщениеОбОшибки = "";
				РезультатЗаписи = ИзменитьКомментарийСервер(Результат,ДополнительныеПараметры,СообщениеОбОшибки);
				Если НЕ РезультатЗаписи Тогда 
					ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибки);
				КонецЕсли;				
				Элементы.Список.Обновить();			
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	Если ДополнительныеПараметры = "ФормаСозданияДокумента" Тогда		
		Элементы.Список.Обновить();
	ИначеЕсли ДополнительныеПараметры = "ФормаРедактированиеДокумента" Тогда 
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти