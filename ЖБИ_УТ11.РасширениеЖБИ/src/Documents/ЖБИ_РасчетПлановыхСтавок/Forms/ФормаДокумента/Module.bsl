
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ОпределитьДоступностьСтраницыПоСтатусу()

	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.Расчет") 
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.ВРаботе") Тогда		
		Элементы.ГруппаСтраницыЛево.ТекущаяСтраница = Элементы.ИсторияСтавок;
		
		Элементы.ГруппаСтраницыЛево.ПодчиненныеЭлементы.ИсторияСтавок.Доступность = Истина;
		Элементы.ГруппаСтраницыЛево.ПодчиненныеЭлементы.ГруппаДопЗатраты.Доступность = Истина;		
		
		Элементы.ГруппаШапка.ПодчиненныеЭлементы.ГруппаПартнер.Доступность = Истина;
		Элементы.ГруппаШапка.ПодчиненныеЭлементы.ГруппаРасстояние.Доступность = Истина;
		Элементы.ГруппаШапка.ПодчиненныеЭлементы.ГруппаСрокДействия.Доступность = Истина;
		Элементы.ГруппаШапка.ПодчиненныеЭлементы.ГруппаШапкаАдреса.Доступность = Истина;
		Элементы.ГруппаШапка.ПодчиненныеЭлементы.ГруппаШапкаПоставщик.Доступность = Истина;		
	Иначе 
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьДоступностьКомандПоСтатусу()
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.Расчет")
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.ВРаботе") Тогда 
		Элементы.ФормаКомандаПлановаяСтавкаРассчитана.Доступность = Истина;
		Элементы.ФормаКомандаОтклонить.Доступность 				  = Истина;
	Иначе
		Элементы.ФормаКомандаПлановаяСтавкаРассчитана.Доступность = Ложь;
		Элементы.ФормаКомандаОтклонить.Доступность 				  = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлементыФормыИнформацию()
	
	//Доступность страницы
	ОпределитьДоступностьСтраницыПоСтатусу();
	
	//Доступность команд
	ОпределитьДоступностьКомандПоСтатусу();
	
	//Обновить ставки
	ПосчитатьСреднююПлановуюСтавку();
 
КонецПроцедуры

&НаСервере
Процедура ПосчитатьСреднююПлановуюСтавку()
	
	//СредняяПлановаяСтавка
	Схема = Элементы.ТаблПлановыхСтавок.ПолучитьИсполняемуюСхемуКомпоновкиДанных(); 
	Настройки = Элементы.ТаблПлановыхСтавок.ПолучитьИсполняемыеНастройкиКомпоновкиДанных(); 	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; 
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема,Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")); 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки); 	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений; 
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если Результат.Количество()>0 Тогда 
		СредняяПлановаяСтавка = ?(Результат.Итог("Расстояние") = 0, 0,Результат.Итог("Сумма")/Результат.Итог("Расстояние"));	
	КонецЕсли;
	
	//СредняяФактическаяСтавка
	Схема = Элементы.ТаблФактическихСтавок.ПолучитьИсполняемуюСхемуКомпоновкиДанных(); 
	Настройки = Элементы.ТаблФактическихСтавок.ПолучитьИсполняемыеНастройкиКомпоновкиДанных(); 	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; 
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема,Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")); 
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки); 	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений; 
	Результат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	Если Результат.Количество()>0 Тогда 
		СредняяФактическаяСтавка = ?(Результат.Итог("Расстояние") = 0,0,Результат.Итог("Сумма")/Результат.Итог("Расстояние"));	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСтатусВРаботе()
	Если Объект.Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.Расчет Тогда
		Объект.Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.ВРаботе;
		Записать();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКорректнуюЦену()
	
	Если Объект.Цена <=35
		ИЛИ Объект.Цена >250 Тогда
		Текст = "Вы уверены, что вы поставили правильную ставку "+Объект.Сумма+"?";
		СтруктураСобытия = Новый Структура("ИмяСобытия","ВопросПроверкиСтавки");
		ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
		ПоказатьВопрос(ОписаниеОповещения,Текст,РежимДиалогаВопрос.ДаНет,15);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
	
#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_ЭЛЕМЕНТОВ_УПРАВЛЕНИЯ_ФОРМЫ

&НаКлиенте
Процедура КомандаЗаписатьДокумент(Команда)	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПровестиДокумент(Команда)
	ОбщегоНазначенияУТКлиент.Провести(ЭтаФорма, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаПровестиИЗакрыть(Команда)
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЧат(Команда)		
	ЖБИ_ОбщийМодульДокументы.ПоказатьДиалогДобавленияКомментарияВЧат(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЧат(Команда)		
	ЖБИ_ОбщийМодульДокументы.ОбновитьЧат(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВозможностьРасчетаПлановыхСтавок(СообщениеОбОшибки)
	
	Отказ = Ложь;	
	Если Объект.Ссылка.Пустая() Тогда 
		Отказ = Истина;
		СообщениеОбОшибки = "Необходимо записать документ";
		Возврат Отказ;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПунктОтгрузки) Тогда
		Отказ = Истина;
		СообщениеОбОшибки = "Не заполнено поле Пункт отгрузки";
		Возврат Отказ;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ПунктНазначения) Тогда
		Отказ = Истина;
		СообщениеОбОшибки = "Не заполнено поле Пункт назначения";
		Возврат Отказ;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Расстояние) Тогда
		Отказ = Истина;
		СообщениеОбОшибки = "Не заполнено поле Расстояние";
		Возврат Отказ;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Сумма) Тогда
		Отказ = Истина;
		СообщениеОбОшибки = "Не заполнено поле Сумма";
		Возврат Отказ;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Цена) Тогда
		Отказ = Истина;
		СообщениеОбОшибки = "Не заполнено поле Цена";
		Возврат Отказ;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.СрокДействияДней) Тогда
		Отказ = Истина;
		СообщениеОбОшибки = "Не заполнено поле Срок действия дней";
		Возврат Отказ;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.СрокДействияДата) Тогда
		Отказ = Истина;
		СообщениеОбОшибки = "Не заполнено поле Действует до";
		Возврат Отказ;
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВыполнитьКомандуРасчетПлановыхСтавокСервер(Ссылка,СообщениеОбОшибки)
	
	Отказ = Документы.ЖБИ_РасчетПлановыхСтавок.ВыполнитьКомандуРасчетПлановыхСтавок(Ссылка,СообщениеОбОшибки);
	Возврат Отказ;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИзменитьСтатусЗаявкиПокупателя(ЗаявкаСсылка,ПредварРасчетСсылка,Статус,СообщениеОбОшибки)
	
	Отказ = Истина;
	Если Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.Рассчитан Тогда 
		Отказ = Документы.ЖБИ_РасчетПлановыхСтавок.ИзменитьСтатусЗаявкиПокупателяОкончательныйРасчет(ЗаявкаСсылка,ПредварРасчетСсылка,СообщениеОбОшибки);
	ИначеЕсли Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.НеСогласован Тогда
		Отказ = Документы.ЖБИ_РасчетПлановыхСтавок.ИзменитьСтатусЗаявкиПокупателяПредварительныйРасчет(ЗаявкаСсылка,ПредварРасчетСсылка,СообщениеОбОшибки);
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

&НаСервере
Функция ВыполнитьРасчетПлановойСтавкиСервер(СообщениеОбОшибки)
	
	Отказ  = Ложь;
	Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.Рассчитан;
	Записать();
	
	НачатьТранзакцию();
	Отказ = ВыполнитьКомандуРасчетПлановыхСтавокСервер(Объект.Ссылка,СообщениеОбОшибки);
	Если Отказ Тогда
		Возврат Отказ;
	КонецЕсли;

	Объект.Статус = Статус;
	Попытка
		Записать();
	Исключение
		СообщениеОбОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Отказ = Истина;
		Возврат Отказ;
	КонецПопытки;	
	
	Отказ = ИзменитьСтатусЗаявкиПокупателя(Объект.ДокументОснование,Объект.Ссылка,Объект.Статус,СообщениеОбОшибки);
	Если Отказ Тогда
		Возврат Отказ;
	КонецЕсли;
	ЗафиксироватьТранзакцию();
		
	Возврат Отказ;
	
КонецФункции

&НаСервере
Функция ОтклонитьРасчетПлановойСтавкиСервер(СообщениеОбОшибки)
	
	Отказ  = Ложь;
	Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.НеСогласован;
	Записать();
	
	НачатьТранзакцию();
	Отказ = ИзменитьСтатусЗаявкиПокупателя(Объект.ДокументОснование,Объект.Ссылка,Статус,СообщениеОбОшибки);
	Если Отказ Тогда
		Возврат Отказ;
	КонецЕсли;
	Объект.Статус = Статус;
	Попытка
		Записать();
	Исключение
		СообщениеОбОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Отказ = Истина;
		Возврат Отказ;
	КонецПопытки;
	ЗафиксироватьТранзакцию();
		
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьРасчетПлановойСтавки()	
	
	СообщениеОбОшибки 	= "";
	Отказ 				= ПроверитьВозможностьРасчетаПлановыхСтавок(СообщениеОбОшибки);
	Если Отказ Тогда	
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибки);
		Возврат;
	КонецЕсли;
	
	Отказ = ВыполнитьРасчетПлановойСтавкиСервер(СообщениеОбОшибки);
	Если Отказ Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибки);
		Возврат;
	Иначе 	
		ОбщегоНазначенияКлиент.СообщитьПользователю("Расчет плановой ставки выполнен");
	КонецЕсли;
	
	ОбновитьЭлементыФормыИнформацию();
	Элементы.ТаблПлановыхСтавок.Обновить();
	Элементы.ТаблФактическихСтавок.Обновить();
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьРасчетПлановойСтавки()
	
	СообщениеОбОшибки 	= "";
	Отказ 				= ОтклонитьРасчетПлановойСтавкиСервер(СообщениеОбОшибки);
	Если Отказ Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибки);
		Возврат;
	Иначе 	
		ОбщегоНазначенияКлиент.СообщитьПользователю("Расчет плановой ставки отклонен");
	КонецЕсли;
	
	ОбновитьЭлементыФормыИнформацию();
	Элементы.ТаблПлановыхСтавок.Обновить();
	Элементы.ТаблФактическихСтавок.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросРасчетаПлановыхСтавок()		
	Текст = "Выполнить расчет плановой ставки?";
	СтруктураСобытия = Новый Структура("ИмяСобытия","ВопросВыполнитьРасчетПлановойСтавки");
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВопрос(ОписаниеОповещения,Текст,РежимДиалогаВопрос.ДаНет,15);	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПлановаяСтавкаРассчитана(Команда)	
	ПоказатьВопросРасчетаПлановыхСтавок();			
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросВведитеКомментарийОтклонения()		
	СтруктураСобытия 	= Новый Структура("ИмяСобытия","ДобавитьКомментарийВЧатОтклонения");
	ВыбЗнач 			= "";
	Массив 				= Новый Массив;
	Массив.Добавить(Тип("Строка"));
	КЧ 					= Новый КвалификаторыСтроки(256);
	ОписаниеТипов 		= Новый ОписаниеТипов(Массив, КЧ);
	Оповещение 			= Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВводЗначения(Оповещение,ВыбЗнач, "Укажите причину отклонения", ОписаниеТипов);	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОтклонить()		
	Текст = "Отклонить расчет плановой ставки?"+Символы.ПС
	+ "Заявка покупателя будет переведена в статус Новый!";
	СтруктураСобытия = Новый Структура("ИмяСобытия","ВопросОтклонить");
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВопрос(ОписаниеОповещения,Текст,РежимДиалогаВопрос.ДаНет,15);	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтклонить(Команда)
	ПоказатьВопросОтклонить();
КонецПроцедуры

&НаСервере
Процедура ПартнерПриИзмененииСервер()	
	Объект.Контрагент = ЖБИ_ОбщийМодульДокументы.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Объект.Партнер);			
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	ПартнерПриИзмененииСервер();		
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьСтоимостьПеревозкиСумма()
	Объект.Цена = ?(Объект.Расстояние=0,0,Объект.Сумма/Объект.Расстояние);				
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьСтоимостьПеревозкиЦена()
	Объект.Сумма = ?(Объект.Расстояние=0,0,Объект.Цена*Объект.Расстояние);				
КонецПроцедуры

&НаКлиенте
Процедура РасстояниеПриИзменении(Элемент)
	РасчитатьСтоимостьПеревозкиСумма();
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	РасчитатьСтоимостьПеревозкиСумма();
	ПроверитьКорректнуюЦену();
КонецПроцедуры

&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)	
	РасчитатьСтоимостьПеревозкиЦена();
	ПроверитьКорректнуюЦену();
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьСрокДействия()	
	Объект.СрокДействияДата = ?(Объект.СрокДействияДней=0,"", ТекущаяДата()+(Объект.СрокДействияДней*86400));	
КонецПроцедуры

&НаКлиенте
Процедура СрокДействияДнейПриИзменении(Элемент)	
	РасчитатьСрокДействия();	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияМаршрутНаКартеНажатие(Элемент)
	
	АдресОткуда = ЖБИ_ОбщийМодульКлиентСервер.URLEncode(ОбщегоНазначенияУТВызовСервера.ЗначенияРеквизитовОбъекта(Объект.ПунктОтгрузки,"Адрес").Адрес);
	АдресКуда 	= ЖБИ_ОбщийМодульКлиентСервер.URLEncode(ОбщегоНазначенияУТВызовСервера.ЗначенияРеквизитовОбъекта(Объект.ПунктНазначения,"Адрес").Адрес);
	ЖБИ_ОбщийМодульДокументы.ОткрытьНавигационнуюСсылкуЯндекс(АдресОткуда, АдресКуда);
	
КонецПроцедуры

#Область ТаблПлановыхСтавок

&НаКлиенте
Процедура ТаблПлановыхСтавокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Истина;	
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"ТаблПлановыхСтавок");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЖБИ_РасчетПлановыхСтавок.Форма.ФормаДокумента",
	Новый Структура("Ключ",ТекДанные.Регистратор),
	ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ТаблФактическихСтавок

&НаКлиенте
Процедура ТаблФактическихСтавокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Истина;	
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"ТаблПлановыхСтавок");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЖБИ_РасчетПлановыхСтавок.Форма.ФормаДокумента",
	Новый Структура("Ключ",ТекДанные.Регистратор),
	ЭтаФорма,,,,);
	
КонецПроцедуры

#КонецОбласти

#Область ДопЗатраты

&НаСервере
Процедура РасчитатьСреднююСтавкуПоДопРасходам()
	ТаблицаДопЗатрат = Объект.ДопЗатраты.Выгрузить();
	Объект.ДопЗатратыНаМатериалы = Документы.ЖБИ_РасчетПлановыхСтавок.РасчитатьСреднююСтавкуПоДопРасходам(ТаблицаДопЗатрат);
КонецПроцедуры

&НаКлиенте
Процедура ДопЗатратыДопРасходыНаРейсПриИзменении(Элемент)	
	РасчитатьСреднююСтавкуПоДопРасходам();
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура УстановитьПараметрыДинамическогоСписка()
	
	Маршрут =  Справочники.ЖБИ_Маршрут.ПолучитьМаршрутПоОтбору(Объект.ПунктОтгрузки,Объект.ПунктНазначения);	
	ТаблПлановыхСтавок.Параметры.УстановитьЗначениеПараметра("Маршрут",Маршрут);
	ТаблФактическихСтавок.Параметры.УстановитьЗначениеПараметра("Маршрут",Маршрут);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВыполнения = Новый Структура("СообщениеОбОшибке","");	
	Если Результат = КодВозвратаДиалога.Отмена Тогда 
		Возврат;
	КонецЕсли;
	
	Сообщение = Новый СообщениеПользователю;
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда 
		Если ДополнительныеПараметры.Свойство("ИмяСобытия")
			И ЗначениеЗаполнено(ДополнительныеПараметры.ИмяСобытия) Тогда
			Если ДополнительныеПараметры.ИмяСобытия = "ВопросВыполнитьРасчетПлановойСтавки" Тогда
				Если Результат = КодВозвратаДиалога.Нет ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
					Возврат;
				КонецЕсли;
				ВыполнитьРасчетПлановойСтавки();
			ИначеЕсли ДополнительныеПараметры.ИмяСобытия = "ВопросОтклонить" Тогда
				Если Результат = КодВозвратаДиалога.Нет ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
					Возврат;
				КонецЕсли;
				ПоказатьВопросВведитеКомментарийОтклонения();
			ИначеЕсли ДополнительныеПараметры.ИмяСобытия = "ДобавитьКомментарийВЧатОтклонения" Тогда 
				Если Результат = Неопределено Тогда
					Возврат;
				КонецЕсли;
				ЖБИ_ОбщийМодульДокументы.ДобавитьКомментарийВЧат(ЭтаФорма, Результат);
				ОтклонитьРасчетПлановойСтавки();
			ИначеЕсли ДополнительныеПараметры.ИмяСобытия = "ВопросПроверкиСтавки" Тогда
				Если Результат = КодВозвратаДиалога.Да ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
					Возврат;
				КонецЕсли;				
				Объект.Цена  = 0;
				Объект.Сумма = 0;
				Сообщение.Текст = "Укажите правильную ставку!";
				Сообщение.Сообщить();
			ИначеЕсли ДополнительныеПараметры.ИмяСобытия = "ДобавитьКомментарийВЧат" Тогда
				Если Результат = Неопределено Тогда
					Возврат;
				КонецЕсли;
				ЖБИ_ОбщийМодульДокументы.ДобавитьКомментарийВЧат(ЭтаФорма, Результат);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(ЭтаФорма.Параметры) = Тип("ДанныеФормыСтруктура") Тогда
		Для Каждого Реквизит Из ЭтаФорма.ПолучитьРеквизиты() Цикл
			Если ЭтаФорма.Параметры.Свойство(Реквизит.Имя) Тогда
				ЭтаФорма[Реквизит.Имя] = ЭтаФорма.Параметры[Реквизит.Имя];
			КонецЕсли;	
		КонецЦикла;	
	Иначе
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ПроизвольныйОбъект", Истина);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	УстановитьПараметрыДинамическогоСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	ОбновитьЭлементыФормыИнформацию();
	ПроверитьСтатусВРаботе();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
		
	
КонецПроцедуры

#КонецОбласти
