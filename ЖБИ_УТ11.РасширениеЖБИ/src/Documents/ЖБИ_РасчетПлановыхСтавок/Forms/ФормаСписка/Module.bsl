

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

&НаСервереБезКонтекста
Процедура КомандаВернутьНаРассчет(СтруктураПараметров)
	
	ЗаявкаСсылка = СтруктураПараметров.Ссылка;
	ЗаявкаОбъект = ЗаявкаСсылка.ПолучитьОбъект();
	ЗаявкаОбъект.Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.Расчет;
	ЗаявкаОбъект.Записать();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяОперации()
	
	ИмяОперации = "";
	ИмяСтраницы = Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница.Имя;	
	Если ИмяСтраницы = "СтраницаЗаявок" Тогда
		ИмяОперации = "СтраницаЗаявок";
		Элементы.КомандаРасчетПлановыхСтавок.Пометка = Истина;
	КонецЕсли;
	
	Возврат ИмяОперации;
	
КонецФункции

&НаКлиенте
Процедура УстановитьПараметрыДинамическогоСписка()
	
	ДатаПросрочки = КонецДня(ТекущаяДата());
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список,
	"ДатаПросрочки",
	ДатаПросрочки);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоУмолчаниюДинамическогоСписка()
	
	//ОтборМенеджерЛогист 	= ТекущийПользователь;
	//ВидСравненияЛогистов 	= ВидСравненияКомпоновкиДанных.ВСписке;
	//УстановитьОтборДинамическогоСпискаПоЭлементу(Элементы.ОтборМенеджерЛогист, "МенеджерЛогист",ВидСравненияЛогистов);	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент,ИмяОтбора,ВидСравнения)
	
	Если ЗначениеЗаполнено(ЭтотОбъект[Элемент.Имя]) Тогда
		Если Элемент.Имя = "ОтборТолькоПросроченные" Тогда
			Если ЭтотОбъект[Элемент.Имя] Тогда 
				ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Список, ИмяОтбора, , ВидСравнения, , );
			Иначе 
				ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,"ДнейПросрочки");
			КонецЕсли;
		ИначеЕсли Элемент.Имя = "ОтборМенеджерЛогист" Тогда
			СписокМенеджеровЛогистов = Новый СписокЗначений;
			СписокМенеджеровЛогистов.Добавить(ЭтотОбъект[Элемент.Имя]);
			СписокМенеджеровЛогистов.Добавить(ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка"));				
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, ИмяОтбора, СписокМенеджеровЛогистов, ВидСравнения, , );
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, ИмяОтбора, ЭтотОбъект[Элемент.Имя], ВидСравнения, , );
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список,ИмяОтбора);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_ЭЛЕМЕНТОВ_УПРАВЛЕНИЯ_ФОРМЫ

&НаКлиенте
Процедура КомандаИзменитьДокумент(Команда)
	
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"Список");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
		
	ОткрытьФорму("Документ.ЖБИ_РасчетПлановыхСтавок.Форма.ФормаДокумента",
	Новый Структура("Ключ",ТекДанные.Ссылка),
	ЭтаФорма,,,,
	Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, "ФормаРедактирование"));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаИзменитьСтатусВРаботе(Команда)
	
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"Список");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Сообщение = Новый СообщениеПользователю;
	Если ТекДанные.Статус <> ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.ВРаботе") Тогда 
		Сообщение.Текст = "Операция доступна только для статуса <В работе>";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
		
	Текст = "Вернуть на рассчет документ: "+ТекДанные.Ссылка+"?";
	СтруктураПраметров = Новый Структура("Ссылка",ТекДанные.Ссылка);
	СтруктураСобытия = Новый Структура("ИмяСобытия, ДопПараметры","КомандаВернутьНаРассчет",СтруктураПраметров);
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВопрос(ОписаниеОповещения,Текст,РежимДиалогаВопрос.ДаНет,15);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;		
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"Список");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.ЖБИ_РасчетПлановыхСтавок.Форма.ФормаДокумента",
	Новый Структура("Ключ",ТекДанные.Ссылка),
	ЭтаФорма,,,,
	Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, "ФормаРедактирование"));
	
КонецПроцедуры


#Область Отборы

&НаКлиенте
Процедура ОтборПартнерПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "Поставщик",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "Организация",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборТипОтгрузкиПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "ТипОтгрузки",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборПунктНазначенияПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "ПунктНазначения",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборНегабаритныйПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "Негабаритный",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборБизнесРегионПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "БизнесРегион",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборМенеджерЛогистПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "МенеджерЛогист",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "Статус",Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтборТолькоПросроченныеПриИзменении(Элемент)
	УстановитьОтборДинамическогоСпискаПоЭлементу(Элемент, "ТолькоПросроченные",Неопределено);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементовФормы()
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(ЭтаФорма.Параметры) = Тип("ДанныеФормыСтруктура") Тогда
		Для Каждого Реквизит Из ЭтаФорма.ПолучитьРеквизиты() Цикл
			Если ЭтаФорма.Параметры.Свойство(Реквизит.Имя) Тогда
				ЭтаФорма[Реквизит.Имя] = ЭтаФорма.Параметры[Реквизит.Имя];
			КонецЕсли;	
		КонецЦикла;	
	Иначе
		Возврат;
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
		
	УстановитьДоступностьЭлементовФормы();
	Элементы.СтраницыОсновнаяФорма.ТекущаяСтраница = Элементы.СтраницаЗаявок;
	ИмяОперации = ПолучитьИмяОперации();
	
	УстановитьПараметрыДинамическогоСписка();
	УстановитьОтборПоУмолчаниюДинамическогоСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВыполнения = Новый Структура("СообщениеОбОшибке","");	
	Если Результат = КодВозвратаДиалога.Отмена Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда 
		Если ДополнительныеПараметры.Свойство("ИмяСобытия")
			И ЗначениеЗаполнено(ДополнительныеПараметры.ИмяСобытия) Тогда
			Если ДополнительныеПараметры.ИмяСобытия = "КомандаВернутьНаРассчет" Тогда			
				Если Результат = КодВозвратаДиалога.Нет ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
					Возврат;
				КонецЕсли;	
				ДопПараметры = ДополнительныеПараметры.ДопПараметры;
				КомандаВернутьНаРассчет(ДопПараметры);
				Элементы.Список.Обновить();			
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	Если ДополнительныеПараметры = "ФормаРедактирование"  Тогда	
		Элементы.Список.Обновить();		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти