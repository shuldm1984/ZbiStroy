#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

Функция ИзменитьСтатусИндивидуальныхЦенПоставщика(СсылкаЗаявка,СсылкаИндЦен,СообщениеОбОшибки) Экспорт 
	
	Отказ = Ложь;
	ОбъекЗаявка = СсылкаЗаявка.ПолучитьОбъект();
	Если ОбъекЗаявка.Статус = Перечисления.ЖБИ_СтатусЗаявкиПокупателя.Новый
		ИЛИ ОбъекЗаявка.Статус = Перечисления.ЖБИ_СтатусЗаявкиПокупателя.ОтправленНаРасчетПлановыхСтавок Тогда 
		ИмяТаблицы = "ПредварительныйРасчет";
	Иначе 
		ИмяТаблицы = "ОкончательныйРасчет";
	КонецЕсли;
	Для Каждого НомСтр Из СсылкаИндЦен.Товары Цикл
		СтруктураОтбор = Новый Структура("ИндивидуальнаяЦена,КодСтроки,Номенклатура,НоменклатураПоставщика,Негабаритный,Поставщик",Истина,НомСтр.КодСтроки,НомСтр.Номенклатура,НомСтр.НоменклатураПоставщика,НомСтр.Негабаритный,СсылкаИндЦен.Партнер);
		НайденныеСтроки = ОбъекЗаявка[ИмяТаблицы].НайтиСтроки(СтруктураОтбор);
		Для Каждого Ном Из НайденныеСтроки Цикл 
			Ном.ИндивидуальнаяЦена = Ложь;
			Ном.ЦенаПоставщика = НомСтр.НоваяЦенаПоставщика;
		КонецЦикла;
	КонецЦикла;
	
	ТаблРасчет 		= ОбъекЗаявка[ИмяТаблицы].Выгрузить();
	ТаблицаКонтроль = ОбъекЗаявка.КонтрольТранспорта.Выгрузить();
	//ЖБИ_ОбщийМодульДокументы.РасчитатьСтоимость(СсылкаЗаявка,ТаблРасчет,ТаблицаКонтроль,Истина);
	//ОбъекЗаявка[ИмяТаблицы].Загрузить(ТаблРасчет);
	
	СтатусЗавершен = Документы.ЖБИ_ЗаявкиПокупателей.МожноПереводитьДокументНаОкончательныйРасчет(СсылкаЗаявка, СсылкаИндЦен);
	Если СтатусЗавершен 
		И СсылкаЗаявка.Статус = Перечисления.ЖБИ_СтатусЗаявкиПокупателя.ОтправленНаРасчетПлановыхСтавок Тогда 
		ОбъекЗаявка.Статус = Перечисления.ЖБИ_СтатусЗаявкиПокупателя.ОкончательныйРасчет;
		Документы.ЖБИ_ЗаявкиПокупателей.ЗаполнитьТаблицуОкончательныйРасчет(ОбъекЗаявка,ОбъекЗаявка.ПредварительныйРасчет.Выгрузить(Новый Структура("Пометка",Истина)));
	КонецЕсли;
	
	Попытка
		ОбъекЗаявка.Записать();
	Исключение
		СообщениеОбОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Отказ = Истина;
		Возврат Отказ;
	КонецПопытки;
	
	Возврат Отказ;
	
КонецФункции

Функция ВыполнитьКомандуРасчетИндЦен(Ссылка,СообщениеОбОшибке) Экспорт
	
	Отказ = Ложь;
	Товары = Ссылка.Товары;
		
	ТаблицаНабораЗаписей = РегистрыСведений.ЖБИ_РасчетИндЦен.ПолучитьПустуюТаблицуНаборЗаписей();
	Для Каждого НомСтр Из Товары Цикл 
		НоваяСтр 						= ТаблицаНабораЗаписей.Добавить();
		НоваяСтр.Регистратор 			= Ссылка;
		НоваяСтр.Период					= Ссылка.Дата;
		НоваяСтр.Активность				= Истина;
		НоваяСтр.КодСтроки				= НомСтр.КодСтроки;
		НоваяСтр.Номенклатура			= НомСтр.Номенклатура;
		НоваяСтр.НоменклатураПоставщика	= НомСтр.НоменклатураПоставщика;
		НоваяСтр.ЗаявкиПокупателей		= Ссылка.ДокументОснование;
		НоваяСтр.Поставщик				= Ссылка.Партнер;
		НоваяСтр.ПунктНазначения		= Ссылка.ДокументОснование.ПунктНазначения;
		НоваяСтр.Цена					= НомСтр.НоваяЦенаПоставщика;
		НоваяСтр.ПроцентСкидки			= НомСтр.ПроцентСкидки;
		НоваяСтр.Количество				= НомСтр.Количество;
		НоваяСтр.Негабаритный			= НомСтр.Негабаритный;
		НоваяСтр.Автор					= Пользователи.ТекущийПользователь();
	КонецЦикла;
	
	//Делаем запись в регистр	
	Результат = РегистрыСведений.ЖБИ_РасчетИндЦен.СоздатьОбновитьЗаписиРегистраСведений(ТаблицаНабораЗаписей,,, СообщениеОбОшибке);
	Если Не Результат Тогда
		Отказ = Истина;	
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

#КонецОбласти

&Перед("ДобавитьКомандыПечати")
Процедура ЖБИ_ДобавитьКомандыПечати(КомандыПечати)
	
	//ЖБИ_ЗаявкаПоставщику
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЖБИ_ЗаявкаПоставщику";
	КомандаПечати.Представление = НСтр("ru = 'ЖБИ - Заявка поставщику'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЖБИ_ЗаявкаПоставщикуКратко";
	КомандаПечати.Представление = НСтр("ru = 'ЖБИ - Заявка поставщику кратко'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
		
КонецПроцедуры

//&Перед("Печать")
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода, МассивПечатныхФорм = Неопределено) Экспорт
	
	Печатать = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖБИ_ЗаявкаПоставщику");	
	Если Печатать Тогда
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		СинонимМакета = НСтр("ru = 'ЖБИ - Заявка поставщику'");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ЖБИ_ЗаявкаПоставщику",
		СинонимМакета,
		ЖБИСформироватьПечатнуюФормуЗаявкаПоставщику(СтруктураТипов, МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
		Если МассивПечатныхФорм <> Неопределено Тогда 
			МассивПечатныхФорм.Добавить(ЖБИСформироватьПечатнуюФормуЗаявкаПоставщику(СтруктураТипов, МассивОбъектов, ОбъектыПечати, ПараметрыПечати));	
		КонецЕсли;	
	КонецЕсли;
	
	Печатать = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖБИ_ЗаявкаПоставщикуКратко");	
	Если Печатать Тогда
		СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
		СинонимМакета = НСтр("ru = 'ЖБИ - Заявка поставщику кратко'");
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		"ЖБИ_ЗаявкаПоставщикуКратко",
		СинонимМакета,
		ЖБИСформироватьПечатнуюФормуЗаявкаПоставщикуКратко(СтруктураТипов, МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
		Если МассивПечатныхФорм <> Неопределено Тогда 
			МассивПечатныхФорм.Добавить(ЖБИСформироватьПечатнуюФормуЗаявкаПоставщикуКратко(СтруктураТипов, МассивОбъектов, ОбъектыПечати, ПараметрыПечати));	
		КонецЕсли;	
	КонецЕсли;
		
КонецПроцедуры

Функция ЖБИСформироватьПечатнуюФормуЗаявкаПоставщику(СтруктураТипов, МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент 						= Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ЗАЯВКАПОСТАВШИКУ";	
	НомерТипаДокумента 						= 0;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЖБИ_ОбщийМодульПечать.ЗаполнитьТабличныйДокументЗаявкаПоставщикуИндЦены(ТабличныйДокумент, МассивОбъектов, ОбъектыПечати, ПараметрыПечати);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ЖБИСформироватьПечатнуюФормуЗаявкаПоставщикуКратко(СтруктураТипов, МассивОбъектов, ОбъектыПечати, ПараметрыПечати) Экспорт
	
	ТабличныйДокумент 						= Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб 			= Истина;
	ТабличныйДокумент.ИмяПараметровПечати 	= "ПАРАМЕТРЫ_ПЕЧАТИ_ЗАЯВКАПОСТАВШИКУКРАТКО";	
	НомерТипаДокумента 						= 0;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЖБИ_ОбщийМодульПечать.ЗаполнитьТабличныйДокументЗаявкаПоставщикуИндЦеныКратко(ТабличныйДокумент, МассивОбъектов, ОбъектыПечати, ПараметрыПечати);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецЕсли

