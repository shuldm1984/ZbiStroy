
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ

&НаКлиенте
Процедура ЗаполнитьСтрокуПоставщики()	
	Для Каждого НомСтр Из Объект.Поставщики Цикл 
		СтрПоставщики = СтрПоставщики + НомСтр.Почта + "; ";
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗапросИндЦен(ИмяКоманды)
	
	Если ИмяКоманды = "КомандаОтправитьЗапрос" Тогда 
		ИмяПечати = "ЖБИ_ЗаявкаПоставщикуКратко";
		МассивПечатныхФорм = ПечатьСерверный(ИмяПечати, Объект.Ссылка);	
	Иначе 
		ИмяПечати = "ЖБИ_ЗаявкаПоставщику";
		МассивПечатныхФорм = ПечатьСерверный(ИмяПечати, Объект.Ссылка);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(МассивПечатныхФорм) Тогда 
		Возврат;
	КонецЕсли;
	
	СписокВложений 					 = Новый Массив;
	УникальныйИдентификаторХранилища = Новый УникальныйИдентификатор;
	
	// подготовка временной папки
	ИмяВременнойПапки = ПолучитьИмяВременногоФайла();
	СоздатьКаталог(ИмяВременнойПапки);
	
	ТипФайла 		= ТипФайлаТабличногоДокумента.PDF;
	ИмяФайла 		= ИмяПечати + "." + "pdf"; 				
	ПолноеИмяФайла 	= ЖБИ_ОбщегоНазначенияСервер.УникальноеИмяФайла(ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ИмяВременнойПапки) + ИмяФайла);
	МассивПечатныхФорм[0].Записать(ПолноеИмяФайла, ТипФайла);
	
	ДвоичныеДанные 			 = Новый ДвоичныеДанные(ПолноеИмяФайла);
	ПутьВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификаторХранилища);
	ОписаниеФайла = Новый Структура;
	ОписаниеФайла.Вставить("Представление", "Заявка поставщику № " + Объект.Номер + " от " + Объект.Дата + ".pdf");
	ОписаниеФайла.Вставить("АдресВоВременномХранилище", ПутьВоВременномХранилище);
	СписокВложений.Добавить(ОписаниеФайла);
	
	СведенияОПокупателе = ЖБИ_ОбщийМодульПечать.ПолучитьКонтактнуюИнформациюПартнера(Объект.Партнер, Объект.Договор);
	ИмяСвойств          = "Адрес,ВидПочтовогоАдреса,ИсточникКонтактнойИнформации,ОбъектИсточник,Пояснение,Представление";
	СтруктураПолучатели = Новый Структура(ИмяСвойств,СведенияОПокупателе.ЭлектроннаяПочта,"Электронная почта",СведенияОПокупателе.НаименованиеДляПечатныхФорм,Объект.Ссылка,"Заявка",СведенияОПокупателе.НаименованиеДляПечатныхФорм);
	Получатели = Новый Массив();
	Получатели.Добавить(СтруктураПолучатели);
	Для Каждого НомСтр Из Объект.Поставщики Цикл
		Получатели.Добавить(Новый Структура(ИмяСвойств,НомСтр.Почта,"Электронная почта","",Объект.Ссылка,"Заявка",""));	
	КонецЦикла;
		
	ПараметрыПисьма = Новый Структура;
	ПараметрыПисьма.Вставить("Получатель", Получатели);
	ПараметрыПисьма.Вставить("Тема", "Заявка поставщику");
	ПараметрыПисьма.Вставить("Текст", "Заявка поставщику");
	ПараметрыПисьма.Вставить("Вложения", СписокВложений);
	ПараметрыПисьма.Вставить("УдалятьФайлыПослеОтправки", Истина);
	
	МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
	МодульРаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыПисьма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТоварыИндЦен(ТекДанные)
	
	ТекущийАктивныйТовар = ТекДанные.Номенклатура;
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ТаблИндЦен,
	"Номенклатура",
	ТекДанные.Номенклатура);
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьСтатусВРаботе()
	Если Объект.Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.Расчет Тогда
		Объект.Статус = Перечисления.ЖБИ_СтатусРасчетаСтавки.ВРаботе;
		Записать();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеТЧ(ИмяТаблицы,Свойство,ЗначениеСвойства,СписокКолонокИсключение,ИмяПоляТаблицы)

	//УсловноеОформление.Элементы.Очистить();
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Использование = Истина;
	ОформлениеУО        = ЭлементУсловногоОформления.Оформление;
	ОтборУО             = ЭлементУсловногоОформления.Отбор;
	ОформляемыеПоляУО   = ЭлементУсловногоОформления.Поля;
	Если ИмяТаблицы = "Товары"
		И Свойство = "ЦветТекста" Тогда 
		ОформлениеУО.УстановитьЗначениеПараметра(Свойство, ЗначениеСвойства);
		ЭлементОтбора                = ОтборУО.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект."+ИмяТаблицы+"."+ИмяПоляТаблицы);
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Меньше;
		//ЭлементОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных(ИмяТаблицы+".БазовоеКоличество");
		ЭлементОтбора.ПравоеЗначение = 0;
		ЭлементОтбора.Использование  = Истина;
				
		ОформляемоеПоле      = ОформляемыеПоляУО.Элементы.Добавить();
		ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы);	
	КонецЕсли;
	
	ОформляемоеПоле.Использование = Истина;
    
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьДоступностьСтраницыПоСтатусу()

	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.Рассчитан")
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.НеСогласован") Тогда  
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьДоступностьКомандПоСтатусу()
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.Рассчитан")
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.НеСогласован") Тогда 
		Элементы.ФормаКомандаУстановитьИндивидуальныеЦены.Доступность = Ложь;
	Иначе 
		Элементы.ФормаКомандаУстановитьИндивидуальныеЦены.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьУсловноеОформление()
	
	ЦветТекста = WebЦвета.Красный;
	УстановитьУсловноеОформлениеТЧ("Товары","ЦветТекста",ЦветТекста,Новый СписокЗначений,"ПроцентСкидки");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЭлементыФормыИнформацию()
	
	//Доступность страницы
	ОпределитьДоступностьСтраницыПоСтатусу();
	
	//Доступность команд
	ОпределитьДоступностьКомандПоСтатусу();
	
	//Доступность элементов формы
	УстановитьУсловноеОформление();
	
	ЗаполнитьСтрокуПоставщики();
	
КонецПроцедуры

#КонецОбласти

#Область Печать

&НаСервере
Функция ПолучитьСписокПечатныхФорм()
	
	СтруктураПечатныхФорм = Новый Структура;
	СтруктураПечатныхФорм.Вставить("ЖБИ_ЗаявкаПоставщику", "ЖБИ - Заявка поставщику");
	СтруктураПечатныхФорм.Вставить("ЖБИ_ЗаявкаПоставщикуКратко", "ЖБИ - Заявка поставщику кратко");
	Возврат СтруктураПечатныхФорм;
	
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Необходимо записать документ");
		Возврат;
	КонецЕсли;
 
	ИмяФормыПечати 		= СтрЗаменить(Команда.Имя, "Печать_", "");	
	МассивПечатныхФорм 	= ПечатьСерверный(ИмяФормыПечати,Объект.Ссылка);
	Если ЗначениеЗаполнено(МассивПечатныхФорм) Тогда
		ЖБИ_ОбщийМодульКлиентСервер.СформироватьПечатнуюФорму(ЭтаФорма,МассивПечатныхФорм);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПечатьСерверный(ИмяФормыПечати, ДокументСсылка)
	
	МассивПечатныхФорм = Новый Массив;
	
	КоллекцияПечатныхФорм 	= Новый ТаблицаЗначений;
	КоллекцияПечатныхФорм.Колонки.Добавить("ИмяМакета");
	КоллекцияПечатныхФорм.Колонки.Добавить("ТабличныйДокумент");
	КоллекцияПечатныхФорм.Колонки.Добавить("СинонимМакета");
	КоллекцияПечатныхФорм.Колонки.Добавить("Картинка");	
	КоллекцияПечатныхФорм.Колонки.Добавить("ПолныйПутьКМакету");
	КоллекцияПечатныхФорм.Колонки.Добавить("ИмяФайлаПечатнойФормы");
	КоллекцияПечатныхФорм.Колонки.Добавить("ИмяВРЕГ");
	НоваяСтр 				= КоллекцияПечатныхФорм.Добавить();
	НоваяСтр.ИмяВРЕГ		= ВРЕГ(ИмяФормыПечати);
	НоваяСтр.ИмяМакета      = ИмяФормыПечати;
	
	ПараметрыПечати 		= Новый Структура("ДополнитьКомплектВнешнимиПечатнымиФормами",Ложь);
	МассивОбъектов			= Новый Массив;
	МассивОбъектов.Добавить(ДокументСсылка);
	Документы.ЖБИ_ИндивидуальныеУсловияПоставки.Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, Новый СписокЗначений, Новый Структура, МассивПечатныхФорм);
	
	Возврат МассивПечатныхФорм;
	
КонецФункции

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_ЭЛЕМЕНТОВ_УПРАВЛЕНИЯ_ФОРМЫ

&НаКлиенте
Процедура СтрПоставщикиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Сегмент) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю("Укажите сегмент");
		Возврат;
	КонецЕсли;
	
	СтруктураВыбора = Новый Структура("ИмяСобытия,Сегмент","ФормаВыбораПоставщиков",Объект.Сегмент);
	Оповещение 		= Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураВыбора);
	ОткрытьФорму("Документ.ЖБИ_ИндивидуальныеУсловияПоставки.Форма.ФормаВыбораПоставщиков",СтруктураВыбора,ЭтаФорма,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	

КонецПроцедуры

&НаКлиенте
Процедура СтрПоставщикиОчистка(Элемент, СтандартнаяОбработка)	
	Объект.Потавщики.Очистить();	
КонецПроцедуры

#Область Команды

&НаКлиенте
Процедура КомандаЗаписатьДокумент(Команда)	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	ОбщегоНазначенияУТКлиент.Записать(ЭтаФорма, Истина);	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьИзменениеСтатуса(СообщениеОбОшибки)
	
	Отказ = Ложь;	
	Для Каждого НомСтр Из Объект.Товары Цикл 
		Если Не ЗначениеЗаполнено(НомСтр.НоваяЦенаПоставщика) Тогда
			СообщениеОбОшибки = "Не указана цена новая поставщика для строки "+НомСтр.НомерСтроки;
			Отказ = Истина;	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИзменитьСтатусИндивидуальныхЦенПоставщика(ЗаявкаСсылка,СсылкаИндЦен,СообщениеОбОшибки)
	
	Отказ = Документы.ЖБИ_ИндивидуальныеУсловияПоставки.ВыполнитьКомандуРасчетИндЦен(СсылкаИндЦен,СообщениеОбОшибки);
	Если Отказ Тогда 
		Возврат Отказ;
	КонецЕсли;
	
	Отказ = Документы.ЖБИ_ИндивидуальныеУсловияПоставки.ИзменитьСтатусИндивидуальныхЦенПоставщика(ЗаявкаСсылка,СсылкаИндЦен,СообщениеОбОшибки);
	Возврат Отказ;
	
КонецФункции

&НаСервере
Функция ИзменитьСтатусИндивидуальныхЦенПоставщикаСервер(ЗаявкаСсылка,СсылкаИндЦен,СообщениеОбОшибки)
	
	Записать();
	НачатьТранзакцию();
	
	Отказ = ИзменитьСтатусИндивидуальныхЦенПоставщика(Объект.ДокументОснование,Объект.Ссылка,СообщениеОбОшибки);
	Если Не Отказ Тогда 
		Объект.Статус = ПредопределенноеЗначение("Перечисление.ЖБИ_СтатусРасчетаСтавки.Рассчитан");
		Записать();
	КонецЕсли;
	ЗафиксироватьТранзакцию();
	
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура УказатьИндивидуальныеЦены()
	
	СообщениеОбОшибки = "";
	Сообщение = Новый СообщениеПользователю;
	Отказ = ПроверитьИзменениеСтатуса(СообщениеОбОшибки);
	Если Отказ Тогда
		Сообщение.Текст = СообщениеОбОшибки;
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Отказ = ИзменитьСтатусИндивидуальныхЦенПоставщикаСервер(Объект.ДокументОснование,Объект.Ссылка,СообщениеОбОшибки);
	Если Не Отказ Тогда 
		Сообщение.Текст = "Индивидуальные условия поставки установлены";
		Сообщение.Сообщить();
	КонецЕсли;
	
	ОбновитьЭлементыФормыИнформацию();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросУказанияИндивидуальныеЦены()	
	
	Текст = "Установить индивидуальные цены?";
	СтруктураСобытия = Новый Структура("ИмяСобытия","ВопросУказанияИндивидуальныеЦены");
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВопрос(ОписаниеОповещения,Текст,РежимДиалогаВопрос.ДаНет,15);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУказатьИндивидуальныеЦены(Команда)	
	ПоказатьВопросУказанияИндивидуальныеЦены();	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИзменитьСтатусЗаявкиПокупателя(ЗаявкаСсылка,ПредварРасчетСсылка,Статус,СообщениеОбОшибки)	
	Отказ = Истина;
	Отказ = Документы.ЖБИ_РасчетПлановыхСтавок.ИзменитьСтатусЗаявкиПокупателяПредварительныйРасчет(ЗаявкаСсылка,ПредварРасчетСсылка,СообщениеОбОшибки);
	Возврат Отказ;
КонецФункции

&НаСервере
Функция ОтклонитьРасчетПлановойСтавкиСервер(СообщениеОбОшибки)
	
	НачатьТранзакцию();
	
	Отказ  	= Ложь;
	Статус 	= Перечисления.ЖБИ_СтатусРасчетаСтавки.НеСогласован;	
	Отказ 	= ИзменитьСтатусЗаявкиПокупателя(Объект.ДокументОснование,Объект.Ссылка,Статус,СообщениеОбОшибки);
	Если Отказ Тогда
		Возврат Отказ;
	КонецЕсли;
	Объект.Статус = Статус;
	Попытка
		Записать();
	Исключение
		СообщениеОбОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Отказ = Истина;
		Возврат Отказ;
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
		
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура ОтклонитьРасчетПлановойСтавки()
	
	СообщениеОбОшибки 	= "";
	Отказ 				= ОтклонитьРасчетПлановойСтавкиСервер(СообщениеОбОшибки);
	Если Отказ Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибки);
		Возврат;
	Иначе 	
		ОбщегоНазначенияКлиент.СообщитьПользователю("Индивидуальные условия поставки отклонены");
	КонецЕсли;
	
	ОбновитьЭлементыФормыИнформацию();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросВведитеКомментарийОтклонения()		
	СтруктураСобытия 	= Новый Структура("ИмяСобытия","ДобавитьКомментарийВЧатОтклонения");
	ВыбЗнач 			= "";
	Массив 				= Новый Массив;
	Массив.Добавить(Тип("Строка"));
	КЧ 					= Новый КвалификаторыСтроки(256);
	ОписаниеТипов 		= Новый ОписаниеТипов(Массив, КЧ);
	Оповещение 			= Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВводЗначения(Оповещение,ВыбЗнач, "Укажите причину отклонения", ОписаниеТипов);	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросОтклонить()		
	Текст = "Отклонить индивидуальные условия поставки?"+Символы.ПС
	+ "Заявка покупателя будет переведена в статус Новый!";
	СтруктураСобытия = Новый Структура("ИмяСобытия","ВопросОтклонить");
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОбработкаРезультатаОповещения", ЭтаФорма, СтруктураСобытия);
	ПоказатьВопрос(ОписаниеОповещения,Текст,РежимДиалогаВопрос.ДаНет,15);	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтклонить(Команда)	
	ПоказатьВопросОтклонить();	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправитьЗапрос(Команда)	
	ОтправитьЗапросИндЦен(Команда.Имя);		
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправитьЗапросБланком(Команда)
	ОтправитьЗапросИндЦен(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЧат(Команда)	
	ЖБИ_ОбщийМодульДокументы.ПоказатьДиалогДобавленияКомментарияВЧат(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЧат(Команда)		
	ЖБИ_ОбщийМодульДокументы.ОбновитьЧат(ЭтаФорма);	
КонецПроцедуры

#КонецОбласти

#Область Товары

&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;		
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиСписка", 0.2, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоваяЦенаПоставщикаПриИзменении(Элемент)
	
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"Товары");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекДанные.ПроцентСкидки = ?(ТекДанные.ЦенаПоставщика = 0,0,(ТекДанные.НоваяЦенаПоставщика-ТекДанные.ЦенаПоставщика)/ТекДанные.ЦенаПоставщика*100);
	ТекДанные.Сумма			=  ТекДанные.Количество * ТекДанные.НоваяЦенаПоставщика;
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура УстановитьПараметрыДинамическогоСписка()
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ТаблИндЦен,
	"Номенклатура",
	ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(ЭтаФорма.Параметры) = Тип("ДанныеФормыСтруктура") Тогда
		Для Каждого Реквизит Из ЭтаФорма.ПолучитьРеквизиты() Цикл
			Если ЭтаФорма.Параметры.Свойство(Реквизит.Имя) Тогда
				ЭтаФорма[Реквизит.Имя] = ЭтаФорма.Параметры[Реквизит.Имя];
			КонецЕсли;	
		КонецЦикла;	
	Иначе
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "Свойства"
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ПроизвольныйОбъект", Истина);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	ЖБИ_ОбщийМодульКлиентСервер.УстановитьКнопкиПечатиСервер(ПолучитьСписокПечатныхФорм(),ЭтаФорма);
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();	
	УстановитьПараметрыДинамическогоСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЭлементыФормыИнформацию();
	ПроверитьСтатусВРаботе();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)	
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработкаРезультатаОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	РезультатВыполнения = Новый Структура("СообщениеОбОшибке","");	
	Если Результат = КодВозвратаДиалога.Отмена Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда 
		Если ДополнительныеПараметры.Свойство("ИмяСобытия")
			И ЗначениеЗаполнено(ДополнительныеПараметры.ИмяСобытия) Тогда
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда 
		Если ДополнительныеПараметры.Свойство("ИмяСобытия")
			И ЗначениеЗаполнено(ДополнительныеПараметры.ИмяСобытия) Тогда
			Если ДополнительныеПараметры.ИмяСобытия = "ВопросУказанияИндивидуальныеЦены" Тогда
				Если Результат = КодВозвратаДиалога.Нет ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
					Возврат;
				КонецЕсли;				
				УказатьИндивидуальныеЦены();
			ИначеЕсли ДополнительныеПараметры.ИмяСобытия = "ДобавитьКомментарийВЧат" Тогда
				Если Результат = Неопределено Тогда
					Возврат;
				КонецЕсли;
				ЖБИ_ОбщийМодульДокументы.ДобавитьКомментарийВЧат(ЭтаФорма, Результат);
			ИначеЕсли ДополнительныеПараметры.ИмяСобытия = "ВопросОтклонить" Тогда
				Если Результат = КодВозвратаДиалога.Нет ИЛИ Результат = КодВозвратаДиалога.Отмена Тогда
					Возврат;
				КонецЕсли;
				ПоказатьВопросВведитеКомментарийОтклонения();
			ИначеЕсли ДополнительныеПараметры.ИмяСобытия = "ДобавитьКомментарийВЧатОтклонения" Тогда 
				Если Результат = Неопределено Тогда
					Возврат;
				КонецЕсли;
				ЖБИ_ОбщийМодульДокументы.ДобавитьКомментарийВЧат(ЭтаФорма, Результат);
				ОтклонитьРасчетПлановойСтавки();
			ИначеЕсли ДополнительныеПараметры.ИмяСобытия = "ФормаВыбораПоставщиков" Тогда
				Если Результат = Неопределено Тогда 
					Возврат;
				КонецЕсли;
				МассивВыбора = Результат.ФормаВыбораПоставщиков;
				Объект.Поставщики.Очистить();
				СтрПоставщики = "";
				Для Каждого НомСтр Из МассивВыбора Цикл 
					Если ПустаяСтрока(НомСтр.Почта) Тогда 
						Продолжить;
					КонецЕсли;
					Если СтрНайти(НомСтр.Почта,"@",)>0 Тогда 
						НоваяСтр = Объект.Поставщики.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтр,НомСтр);
					КонецЕсли;
				КонецЦикла;	
				ЗаполнитьСтрокуПоставщики();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиСписка()
	
	ТекДанные = ЖБИ_ОбщийМодульКлиентСервер.ПроверитьТекСтрокуНаДоступность(ЭтаФорма,"Товары");
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ТекущийАктивныйТовар <> ТекДанные.Номенклатура Тогда
		ЗаполнитьТоварыИндЦен(ТекДанные);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти
